#N struct 1003-DS float x float y array 1003-table 1003-element;
#N struct 1003-element float x float y;
#N canvas 387 58 562 515 12;
#X obj 434 289 pointer;
#N canvas 645 212 509 380 template 0;
#X obj 245 304 plot \$0-table 900 2;
#X obj 53 131 struct \$0-DS float x float y array \$0-table \$0-element
;
#X text 72 178 The drawing instruction now does not specify a spacing
value between the floats in the array. This is because it would get
ignored because we also have a "x" variable in the element's struct.
Hence \, it takes 'x' from the data itself. The 'x' values are initialized
as "0" \, so all values in the array are grouped together at initialization.
, f 47;
#X text 61 46 Data Structure named "\$0-DS" holding coordinates floats
"x/y" and an array named "\$0-table" using the element struct named
"\$0-element" defined in the other subpatch., f 53;
#X restore 369 117 pd template;
#X msg 49 222 0 20 40 60 80 100 120 140 160 180 200 220 240 260 280
300;
#X text 177 423 <= sets size;
#X text 54 197 Initialize/set the 'x' values for each element:;
#X text 68 262 You can later drag around also in the 'x' axis., f
19;
#X obj 325 319 append \$0-DS x y;
#X obj 132 453 array size -s \$0-DS \$0-table;
#X obj 49 352 array set -s \$0-DS \$0-table -f \$0-f x;
#X obj 72 89 initmess \; pd-\$0-display clear \, vis 1 \; \$0-pointer
traverse pd-\$0-display \, bang \; \$0-coords 10 105 \; \$0-size 16
;
#N canvas 1005 301 334 221 \$0-display 1;
#X scalar 1003-DS 10 105 \; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0 0
\; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0 0 \; 0
0 \; \;;
#X coords 0 221 1 220 0 0 0;
#X restore 369 144 pd \$0-display;
#X obj 434 259 r \$0-pointer;
#X obj 325 278 r \$0-coords;
#X obj 132 395 r \$0-size;
#N canvas 442 23 480 272 \$0-element 0;
#X obj 92 230 filledpolygon 0 0 1 -2 -2 2 -2 2 2 -2 2;
#X text 89 200 draw a black dot to represent the value:;
#X obj 167 152 struct \$0-element float x float y;
#X text 33 42 The element is defined as a struct of name "\$0-element"
containing now both a float named "x" and "y". Since these are the
special variable names for the horizontal and vertical coordinates
\, this means you can drag this element both vertically and horizonatly.
;
#X restore 369 91 pd \$0-element;
#X floatatom 132 423 5 0 0 0 - - - 0;
#X text 43 18 In this example we're able to set the values of both
'x' and 'y' elements in an array. You can now click and drag each point
in the array both vertically and horizontaly., f 66;
#X connect 0 0 6 2;
#X connect 2 0 8 0;
#X connect 6 0 7 1;
#X connect 6 0 8 2;
#X connect 11 0 0 0;
#X connect 12 0 6 0;
#X connect 13 0 15 0;
#X connect 15 0 7 0;
