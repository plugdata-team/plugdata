#N struct 1003-DS float x float y array 1003-table 1003-element;
#N struct 1003-element float x float y float w;
#N canvas 387 58 633 523 12;
#X obj 472 233 pointer;
#N canvas 645 212 509 380 template 0;
#X obj 53 131 struct \$0-DS float x float y array \$0-table \$0-element
;
#X text 72 178 The drawing instruction now does not specify a spacing
value between the floats in the array. This is because it would get
ignored because we also have a "x" variable in the element's struct.
Hence \, it takes 'x' from the data itself. The 'x' values are initialized
as "0" \, so all values in the array are grouped together at initialization.
, f 47;
#X text 61 46 Data Structure named "\$0-DS" holding coordinates floats
"x/y" and an array named "\$0-table" using the element struct named
"\$0-element" defined in the other subpatch., f 53;
#X obj 245 304 plot \$0-table 900;
#X restore 402 112 pd template;
#X text 215 427 <= sets size;
#X obj 363 263 append \$0-DS x y;
#X obj 170 457 array size -s \$0-DS \$0-table;
#X obj 27 313 array set -s \$0-DS \$0-table -f \$0-f x, f 14;
#N canvas 1032 224 334 221 \$0-display 1;
#X scalar 1003-DS 10 105 \; 0 0 1 \; 20 9 2 \; 50 0 5 \; 90 -9 3 \;
70 12 4 \; 170 -17 2 \; 140 19 1 \; 290 21 12 \; \;;
#X coords 0 221 1 220 0 0 0;
#X restore 402 139 pd \$0-display;
#X obj 472 203 r \$0-pointer;
#X obj 363 222 r \$0-coords;
#X obj 170 399 r \$0-size;
#N canvas 442 23 480 272 \$0-element 0;
#X obj 92 230 filledpolygon 0 0 1 -2 -2 2 -2 2 2 -2 2;
#X text 89 200 draw a black dot to represent the value:;
#X obj 109 131 struct \$0-element float x float y float w;
#X text 33 42 The element is defined as a struct of name "\$0-element"
containing now a float named "x" \, "y" and a new "w" one for width
\, which means you can set the lone width for each element now.;
#X restore 402 86 pd \$0-element;
#X floatatom 170 427 5 0 0 0 - - - 0;
#X text 33 17 In this example we're able to set 'x' \, 'y' and now
a 'w' element for line width \, which you can set when the cursor becomes
a vertical double arrow., f 80;
#X obj 144 313 array set -s \$0-DS \$0-table -f \$0-f y, f 14;
#X obj 253 313 array set -s \$0-DS \$0-table -f \$0-f w, f 14;
#X obj 144 202 bng 17 250 50 0 empty \$0-bang empty 17 7 0 10 #dfdfdf
#000000 #000000;
#X text 170 201 set x \, y and w values.;
#X msg 253 241 1 2 5 3 4 2 1 12, f 8;
#X msg 26 240 0 20 50 90 70 170 140 290, f 14;
#X obj 403 371 element \$0-DS \$0-table, f 8;
#X floatatom 403 459 5 0 0 0 - - - 0;
#X floatatom 471 459 5 0 0 0 - - - 0;
#X floatatom 540 459 5 0 0 0 - - - 0;
#X obj 440 319 hradio 15 1 0 8 empty empty empty 0 -8 0 10 #dfdfdf
#000000 #000000 0;
#X obj 100 77 initmess \; pd-\$0-display clear \, vis 1 \; \$0-pointer
traverse pd-\$0-display \, bang \; \$0-coords 10 105 \; \$0-size 8
\; \$0-bang bang;
#X obj 403 426 get \$0-element x y w;
#X text 439 296 get values;
#X msg 144 241 0 9 0 -9 12 -17 19 21, f 11;
#X connect 0 0 3 2;
#X connect 3 0 4 1;
#X connect 3 0 5 2;
#X connect 3 0 13 2;
#X connect 3 0 14 2;
#X connect 3 0 19 1;
#X connect 7 0 0 0;
#X connect 8 0 3 0;
#X connect 9 0 11 0;
#X connect 11 0 4 0;
#X connect 15 0 18 0;
#X connect 15 0 27 0;
#X connect 15 0 17 0;
#X connect 17 0 14 0;
#X connect 18 0 5 0;
#X connect 19 0 25 0;
#X connect 23 0 19 0;
#X connect 25 0 20 0;
#X connect 25 1 21 0;
#X connect 25 2 22 0;
#X connect 27 0 13 0;
