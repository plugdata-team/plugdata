#N canvas 520 63 479 583 12;
#X declare -path else;
#N canvas 308 211 308 379 voice1 0;
#X obj 126 282 *~;
#X obj 71 132 mtof;
#X floatatom 71 162 5 0 0 0 - - - 0;
#X obj 71 43 inlet;
#X obj 71 74 unpack;
#X floatatom 144 107 5 0 0 0 - - - 0;
#X floatatom 71 105 5 0 0 0 - - - 0;
#X obj 71 197 bl.saw~;
#X obj 144 244 adsr~ 10 10 0.5 50;
#X obj 126 314 throw~ \$0-voice;
#X connect 0 0 9 0;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 8 0;
#X connect 6 0 1 0;
#X connect 7 0 0 0;
#X connect 8 0 0 1;
#X restore 176 524 pd voice1;
#X obj 54 336 /~ 4;
#X obj 54 370 out~;
#X obj 54 308 catch~ \$0-voice;
#N canvas 308 211 308 379 voice2 0;
#X obj 126 282 *~;
#X obj 61 132 mtof;
#X floatatom 61 162 5 0 0 0 - - - 0;
#X obj 61 43 inlet;
#X obj 61 74 unpack;
#X floatatom 144 107 5 0 0 0 - - - 0;
#X floatatom 61 105 5 0 0 0 - - - 0;
#X obj 144 244 adsr~ 10 10 0.5 50;
#X obj 126 314 throw~ \$0-voice;
#X obj 61 197 bl.tri~;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 1 0;
#X connect 7 0 0 1;
#X connect 9 0 0 0;
#X restore 210 462 pd voice2;
#N canvas 308 211 308 379 voice3 0;
#X obj 126 282 *~;
#X obj 61 132 mtof;
#X floatatom 61 162 5 0 0 0 - - - 0;
#X obj 61 43 inlet;
#X obj 61 74 unpack;
#X floatatom 144 107 5 0 0 0 - - - 0;
#X floatatom 61 105 5 0 0 0 - - - 0;
#X obj 144 244 adsr~ 10 10 0.5 50;
#X obj 126 314 throw~ \$0-voice;
#X obj 61 197 bl.square~;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 1 0;
#X connect 7 0 0 1;
#X connect 9 0 0 0;
#X restore 244 401 pd voice3;
#N canvas 308 211 308 379 voice4 0;
#X obj 126 282 *~;
#X obj 71 132 mtof;
#X floatatom 71 162 5 0 0 0 - - - 0;
#X obj 71 43 inlet;
#X obj 71 74 unpack;
#X floatatom 144 107 5 0 0 0 - - - 0;
#X floatatom 71 105 5 0 0 0 - - - 0;
#X obj 144 244 adsr~ 10 10 0.5 50;
#X obj 126 314 throw~ \$0-voice;
#X obj 71 197 osc~;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 1 0;
#X connect 7 0 0 1;
#X connect 9 0 0 0;
#X restore 278 347 pd voice4;
#X obj 176 179 keyboard 17 80 2 4 0 0 empty empty;
#X obj 176 118 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 102 120 notein;
#X obj 102 151 pack;
#N canvas 470 55 457 368 random_chords 0;
#X obj 174 309 outlet;
#X obj 62 32 inlet;
#X obj 146 242 makenote;
#X obj 218 139 expr $f1 + random(2 \, 5);
#X obj 218 174 expr $f1 + random(2 \, 5);
#X obj 218 208 expr $f1 + random(2 \, 5);
#X obj 62 66 expr random(60 \, 72) \; random(90 \, 127) \; random(500 \, 1000);
#X obj 174 272 pack;
#X connect 1 0 6 0;
#X connect 2 0 7 0;
#X connect 2 1 7 1;
#X connect 3 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 6 0 3 0;
#X connect 6 1 2 1;
#X connect 6 2 2 2;
#X connect 7 0 0 0;
#X restore 176 151 pd random_chords;
#X text 199 118 <= generate random chords if you don't have a controller, f 29;
#X obj 18 225 declare -path else;
#X obj 176 287 spread 65 72 77;
#X listbox 176 498 8 0 0 0 - - - 0;
#X listbox 210 437 8 0 0 0 - - - 0;
#X listbox 244 377 8 0 0 0 - - - 0;
#X listbox 278 322 8 0 0 0 - - - 0;
#X text 60 33 This example uses [spread] to split note outpt from [keyboard]. You can use this to spread the output to different synths. Here \, each subpatch has a different oscillator.;
#X connect 1 0 2 0;
#X connect 3 0 1 0;
#X connect 7 0 14 0;
#X connect 8 0 11 0;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 14 0 15 0;
#X connect 14 1 16 0;
#X connect 14 2 17 0;
#X connect 14 3 18 0;
#X connect 15 0 0 0;
#X connect 16 0 4 0;
#X connect 17 0 5 0;
#X connect 18 0 6 0;
