#N canvas 307 39 866 476 12;
#X declare -path else;
#X obj 697 21 declare -path else;
#X text 19 14 Note you can use MIDI connections to make Pd talk to other pieces of software in your computer. This can be done with a MIDI driver that acts as a MIDI bridge. the OSC protocol was specially designed to be able to do this "out of the box" via network connections \, and you can also easily talk to different machines. Not only that \, but the messaging format is more versatile than MIDI. In this example \, we try to talk to other software that can communicate via OSC., f 68;
#X obj 303 424 display;
#X obj 75 437 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X msg 75 374 /SC \$1;
#X floatatom 75 344 5 0 0 0 - - - 0;
#X obj 78 315 hsl 162 19 440 880 0 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 75 406 osc.send 8017;
#X obj 303 390 osc.receive 8031;
#X text 19 216 Open the "SC.scd" file to communicate to this patch! Below \, to the left \, we send a float via the localhost to port "8017". The message is sent with the "/SC" address. Once you connect and initialize stuff in SuperCollider \, change the slider values and see the effect., f 68;
#X text 278 308 Messages sent from the SuperCollider example are received here on port "8031"., f 22;
#X text 527 60 Of course you need a minimum understanding on how SuperCollider works to make this happen. SuperCollider is a powerful open source language for computer music. Get it/install it from: https://supercollider.github.io/, f 45;
#X text 19 121 Communicating to MAX is quite simple via its buitin [udpsend] and [udpreceive] objects \, that behave quite similarly as [osc.send] and [osc.receive] from ELSE. Just provide the host address and port and have fun. Below we have examples to communicate to "SuperCollider" and "Processing". You can find corresponding codes for each of them in the same folder as this example. Let's start with SuperCollider!, f 68;
#X obj 621 428 tgl 20 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 621 355 /ratio \$1;
#X obj 621 394 osc.send 12001;
#X obj 624 300 hsl 162 19 100 200 0 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 621 327 5 0 0 0 - - - 0;
#X text 533 145 Processing is a language well suited for visual arts. Get it and install it from: https://processing.org/ (just like the SuperCollider example \, you need a minimum understanding of it)., f 44;
#X text 533 225 Open the circle.pde file and run it in Processing. The code generates a circle whose ratio's value is set by the slider below., f 44;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 3 0;
#X connect 8 0 2 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 16 0 17 0;
#X connect 17 0 14 0;
