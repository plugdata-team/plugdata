#N canvas 216 46 888 469 12;
#X declare -path else;
#X obj 685 31 declare -path else;
#X msg 526 133 clear;
#X obj 449 41 tgl 20 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 449 70 tempo 120 50;
#X msg 507 104 create;
#X obj 526 214 markov;
#X text 36 39 A Markov chain is a stochastic model describing a sequence of possible events in which the probability of each event depends only on the state attained in the previous event., f 52;
#X obj 582 171 stripnote;
#X obj 582 77 keyboard 17 80 2 4 0 0 empty empty;
#X text 36 102 You can use this model to generate random sequences of notes where the probability of the next note depends on the current state. For instance \, middle C (MIDI Pitch 60) has 50% change to go to G (67) 25% chance to go to E (64) and 25% chance to go to F (65). Then for each of these other values you can also set probabilities for the next step and so on. The ELSE library has [markov] which can learn from an input sequence what the probabilities are., f 52;
#X obj 617 336 *~;
#X obj 526 275 mtof;
#X obj 617 391 out~;
#X obj 617 364 plate.rev~ 50 0.6 0.25 0.8 0.5;
#X obj 635 292 adsr~ 50 10 0.7 100;
#X text 36 235 In this example you can use [keyboard] from ELSE to feed pitches to [markov]. If you play 60 and then 67 it learns that 67 comes after 60 as a possibility. The number this transition occurs is computed as a probability. Hence \, if 60 was followed by 67 7 times and followed by 65 3 times \, then 67 has the probability to come after 60 70% of the times \, while there's a 30% probability of transitioning to 65!, f 52;
#X text 582 213 <= check help file for more;
#X obj 582 18 notein;
#X obj 582 42 pack;
#X obj 526 301 bl.tri~;
#X text 36 358 Play some note transitions and then use "create" to generate the chain or "clear" to forget and erase the memory to start over. Once you have a chain \, bangs into [markov] start playing the chain. See [pd MIDI-File] for an example that reads a MIDI File., f 52;
#X text 473 41 <-- play;
#X obj 526 249 makenote 127 200;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 22 0;
#X connect 7 0 5 1;
#X connect 8 0 7 0;
#X connect 10 0 13 0;
#X connect 11 0 19 0;
#X connect 13 0 12 0;
#X connect 14 0 10 1;
#X connect 17 0 18 0;
#X connect 17 1 18 1;
#X connect 18 0 8 0;
#X connect 19 0 10 0;
#X connect 22 0 11 0;
#X connect 22 1 14 0;
