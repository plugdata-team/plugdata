#N canvas 506 43 608 453 12;
#X declare -path else;
#X obj 167 316 *~;
#X obj 62 196 mtof;
#X obj 62 233 trigger float bang;
#X obj 62 164 nbx 3 16 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 13 #dcdcdc #000000 #000000 0 256;
#X obj 62 58 tgl 25 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 62 32 loadbang;
#N canvas 759 290 294 394 additive 0;
#X obj 104 264 catch~ \$0-osc;
#X obj 104 301 /~ 16;
#X obj 104 336 outlet~;
#X obj 99 29 inlet;
#X obj 99 67 v fund;
#X text 29 100 Check the [pd partial] subpatches \, where each contains a pair of oscillatores., f 36;
#N canvas 829 23 446 337 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 252 118 *~ 10;
#X obj 94 111 expr~ fund + $v1 * 20;
#X obj 94 76 rampnoise~ 1;
#X obj 252 93 rampnoise~ 0.1;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X restore 71 165 pd partial;
#N canvas 425 108 446 322 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 94 111 expr~ fund * 2.8 + $v1 * 40;
#X obj 304 117 *~ 30;
#X obj 94 76 rampnoise~ 2;
#X obj 304 92 rampnoise~ 0.7;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 3 1;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X restore 71 185 pd partial;
#N canvas 425 108 446 322 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 301 118 *~ 50;
#X obj 94 111 expr~ fund * 5.2 + $v1 * 70;
#X obj 94 76 rampnoise~ 0.5;
#X obj 301 93 rampnoise~ 1;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X restore 71 205 pd partial;
#N canvas 425 108 446 322 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 306 118 *~ 100;
#X obj 94 111 expr~ fund * 6.7 + $v1 * 120;
#X obj 94 76 rampnoise~ 1.5;
#X obj 306 93 rampnoise~ 0.5;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X restore 71 225 pd partial;
#N canvas 425 108 446 322 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 307 118 *~ 20;
#X obj 94 111 expr~ fund * 1.9 + $v1 * 30;
#X obj 94 76 rampnoise~ 0.1;
#X obj 307 93 rampnoise~ 0.4;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X restore 155 165 pd partial;
#N canvas 825 62 446 322 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 94 111 expr~ fund * 4.1 + $v1 * 50;
#X obj 306 118 *~ 40;
#X obj 94 76 rampnoise~ 1;
#X obj 306 93 rampnoise~ 0.9;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 3 1;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X restore 155 185 pd partial;
#N canvas 425 108 446 322 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 306 118 *~ 60;
#X obj 94 111 expr~ fund * 5.9 + $v1 * 90;
#X obj 94 76 rampnoise~ 0.1;
#X obj 306 93 rampnoise~ 0.2;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X restore 155 205 pd partial;
#N canvas 425 108 446 322 partial 0;
#X obj 94 179 osc~;
#X obj 94 250 throw~ \$0-osc;
#X obj 144 201 osc~;
#X obj 144 173 +~;
#X obj 311 118 *~ 200;
#X obj 94 111 expr~ fund * 7.5 + $v1 * 200;
#X obj 94 76 rampnoise~ 1.3;
#X obj 311 93 rampnoise~ 0.3;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X restore 155 225 pd partial;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X restore 62 272 pd additive;
#X obj 167 352 out~;
#X obj 62 100 tempo 15 50;
#X text 175 176 Open the [pd additive] subpatch for more details.;
#X text 209 247 ADSR envelope;
#X obj 185 272 envgen~ 400 1 100 0.7 2000 0.7 500 0;
#X obj 62 133 rand.i 36 73;
#X obj 403 42 declare -path else;
#X text 175 84 Here's another additive synthesis example. This patch receives a fundamental frequency \, from which an inharmonic series of 8 partials is generated. For each partial \, we have a pair of oscillators \, both of which are closely tuned but with random vibratos/pitch deviations., f 56;
#X text 295 325 As an exercise you can adapt this to use [clone]! For each copy to have different parameters \, use a random generator at load time (with loadbang)., f 39;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 2 0 6 0;
#X connect 2 1 11 0;
#X connect 3 0 1 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 8 0 12 0;
#X connect 11 0 0 1;
#X connect 12 0 3 0;
