#N canvas 498 59 564 415 10;
#X obj 306 7 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 6 pd;
#X obj 345 14 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 58 43 cnv 4 4 4 empty empty canvas 0 28 2 18 #e0e0e0 #000000 0;
#X obj 21 43 cnv 4 4 4 empty empty Get 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 14 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 14 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 14 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 29 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 29 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 7 cnv 15 301 42 empty empty canvas.name 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 6 graph;
#X obj 114 43 cnv 4 4 4 empty empty name 0 28 2 18 #e0e0e0 #000000 0;
#X obj 8 234 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 269 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 352 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 386 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 154 277 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 182 361 1) float -;
#X obj 154 243 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 199 244 bang;
#X text 187 279 symbol;
#X text 236 278 - canvas name;
#X obj 186 194 else/display;
#X obj 186 140 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 253 361 depth level (default 0), f 25;
#X text 236 244 - outputs canvas name;
#X obj 186 168 else/canvas.name;
#X obj 7 303 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 178 311 '-w' - for 'window' name;
#X text 90 90 [canvas.name] gives you the canvas/window name symbol. See the help file of else/gui that shows how to manipulate canvas widgets with this.;
#N canvas 479 93 477 316 -w 0;
#X obj 140 175 else/display;
#X obj 140 217 else/receiver;
#X obj 140 94 loadbang;
#X obj 140 248 print canvas-messages;
#X text 76 32 The '-w' flag gives the 'window' name instead and drops the '.c' at the end of the name. We use this here to receive messages sent to the window., f 51;
#X obj 140 147 else/canvas.name -w;
#X obj 140 118 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X restore 489 171 pd -w;
#X text 166 328 '-env' - sets depth to "environment" mode;
#N canvas 796 177 502 408 depth/-env 0;
#X obj 77 160 else/display;
#X text 77 193 parent's name;
#X obj 295 162 else/display;
#X text 295 195 this subpatch's;
#X text 53 33 You can set a level number to query for the name of the parent patch (1) or parent's parent patch (2) and so on...;
#X obj 77 128 else/canvas.name 1;
#X obj 295 131 else/canvas.name;
#X obj 147 358 else/display;
#X obj 147 326 else/canvas.name -env;
#X text 71 235 when you set to '-env' you get the environment's name \, which is the same as the main patch window. The depth also works here to get an owning patch's environment name.;
#X obj 77 96 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 295 98 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 147 294 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X connect 5 0 0 0;
#X connect 6 0 2 0;
#X connect 8 0 7 0;
#X connect 10 0 5 0;
#X connect 11 0 6 0;
#X connect 12 0 8 0;
#X restore 442 195 pd depth/-env;
#X connect 24 0 27 0;
#X connect 27 0 23 0;
