#N canvas 452 23 561 517 10;
#X floatatom 237 209 8 0 0 0 - - - 12;
#X obj 307 6 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 306 5 pd;
#X obj 346 13 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 459 13 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 13 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 516 13 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 28 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 503 28 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 25 42 cnv 4 4 4 empty empty Beat\ detection 0 28 2 18 #e0e0e0 #000000 0;
#X obj 4 5 cnv 15 301 42 empty empty beat~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 4 5 graph;
#X obj 237 151 else/resonant~ 500 2000;
#X text 299 212 BPM;
#X obj 4 344 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 427 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 95 353 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 167 435 1) float;
#X obj 4 489 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 4 245 cnv 3 550 3 empty empty inlet 8 12 0 13 #dcdcdc #000000 0;
#X obj 95 254 cnv 17 3 84 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 178 251 signal -;
#X text 235 251 input to analyze;
#X obj 488 94 else/setdsp~;
#X obj 237 125 else/tempo~ -on 120;
#N canvas 422 134 629 514 example 0;
#X obj 65 100 tgl 25 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 65 258 else/out~;
#X msg 312 94 mode \$1;
#X obj 312 67 hradio 19 1 0 9 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0;
#X msg 328 132 window 512 \, hop 128, f 11;
#X floatatom 312 281 9 0 0 1 BPM - - 16;
#X text 107 40 Testing on proper rhythmic loop., f 18;
#N canvas 128 110 626 558 modes 0;
#X text 63 39 [beat~] makes use of different Onset detection methods \, which are:, f 70;
#X text 65 76 Mode 0 --> "hfc": High-Frequency content (Default) \; - Computes the High Frequency Content (HFC) of the input spectral frame. This is efficient at detecting percussive onsets. Reference: Paul Masri. Computer modeling of Sound for Transformation and Synthesis of Musical Signal. PhD dissertation \, University of Bristol \, UK \, 1996, f 82;
#X text 65 140 Mode 1 --> "energy": Energy based distance \; - Calculates the local energy of the input spectral frame., f 82;
#X text 66 171 Mode 2 --> "complex": Complex domain \; - Suited for complex signals such as polyphonic recordings. Referece: Christopher Duxbury \, Mike E. Davies \, and Mark B. Sandler. Complex domain onset detection for musical signals. In Proceedings of the Digital Audio Effects Conference \, DAFx-03 \, pages 90-93 \, London \, UK \, 2003, f 82;
#X text 66 234 Mode 3 --> "phase": Phase based detection \; Suited for complex signals such as polyphonic recordings. Reference: Juan-Pablo Bello \, Mike P. Davies \, and Mark B. Sandler. Phase-based note onset detection for music signals. In Proceedings of the IEEE International Conference on Acoustics Speech and Signal Processing \, pages 441­444 \, Hong-Kong \, 2003, f 82;
#X text 66 299 Mode 4 --> "wphase": weighted phase deviation, f 82;
#X text 66 319 Mode 5 --> "specdiff": Spectral difference \; Reference: Jonhatan Foote and Shingo Uchihashi. The beat spectrum: a new approach to rhythm analysis. In IEEE International Conference on Multimedia and Expo (ICME 2001) \, pages 881­884 \, Tokyo \, Japan \, August 2001, f 82;
#X text 66 372 Mode 6 --> "specflux": Spectral flux \; Reference: Simon Dixon \, Onset Detection Revisited \, in ``Proceedings of the 9th International Conference on Digital Audio Effects'' (DAFx-06) \, Montreal \, Canada \, 2006, f 82;
#X text 66 425 Mode 7 --> "kl": Kulback-Liebler function \; Reference: Stephen Hainsworth and Malcom Macleod. Onset detection in music audio signals. In Proceedings of the International Computer Music Conference (ICMC) \, Singapore \, 2003, f 82;
#X text 66 477 Mode 8 --> "mkl": Modified Kulback-Liebler function \; Reference: Paul Brossier \, 'Automatic annotation of musical audio for interactive systems' \, Chapter 2 \, Temporal segmentation \, PhD thesis \, Centre for Digital music \, Queen Mary University of London \, London \, UK \, 2006, f 82;
#X restore 424 94 pd modes;
#X text 369 93 see -->;
#X msg 346 172 silence -40;
#X msg 360 199 thresh 0.3;
#X text 410 136 change window/hop size;
#X text 425 171 set silence threshold in dBFS;
#X text 435 199 set linear attack threshold;
#X obj 312 244 else/beat~;
#X obj 272 181 bng 25 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 272 335 else/tempo -on;
#X obj 272 366 else/impseq~;
#X obj 272 418 else/out~;
#X obj 272 387 else/resonant~ 950 1000;
#X floatatom 203 100 5 0 0 0 speed(%) - - 16;
#X obj 65 138 else/gran.player~ drum-loop.wav 1 1;
#X connect 0 0 21 0;
#X connect 2 0 14 0;
#X connect 3 0 2 0;
#X connect 4 0 14 0;
#X connect 5 0 16 1;
#X connect 9 0 14 0;
#X connect 10 0 14 0;
#X connect 14 0 5 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 19 0;
#X connect 19 0 18 0;
#X connect 20 0 21 2;
#X connect 21 0 1 0;
#X connect 21 0 14 0;
#X connect 21 1 15 0;
#X restore 460 213 pd example;
#X text 142 265 mode <float> -;
#X text 130 279 thresh <float> -;
#X text 124 293 silence <float> -;
#X text 235 293 set silence level in dBFS;
#X text 130 308 window <float> -;
#X text 148 323 hop <float> -;
#X text 235 308 set analysis window size in samples;
#X text 235 323 set hop size in samples;
#X obj 4 378 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 154 387 -mode <float>: set mode (default: 0);
#X text 136 403 -silence <float>: set silence level (default: -70);
#X text 167 450 2) float;
#X text 167 465 3) float;
#X text 220 450 - set window size (default 1024), f 34;
#X text 220 465 - set hop size (default 512), f 34;
#X obj 237 180 else/beat~;
#X obj 122 181 else/out~;
#X text 184 353 float -;
#X text 235 353 detected BPM value;
#X text 73 87 [beat~] takes an input signal and outputs a detected BPM value., f 52;
#X text 220 435 - level threshold (default 0.01), f 34;
#X text 235 279 set threshold (0.01 to 1);
#X text 235 265 set mode (0 to 8);
#X connect 12 0 41 0;
#X connect 12 0 42 0;
#X connect 24 0 12 0;
#X connect 41 0 0 0;
