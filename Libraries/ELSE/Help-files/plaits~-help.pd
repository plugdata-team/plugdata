#N canvas 463 23 561 712 10;
#X obj 198 176 else/out~;
#X floatatom 198 118 5 0 0 0 - - - 12;
#X text 238 121 frequency (Hz by default);
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty "Plaits"\ module\ from\ "Mutable\ Instruments" 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty plaits~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X obj 4 238 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 457 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 584 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 88 465 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 89 245 cnv 17 3 165 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 683 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 248 243 - pitch input;
#X text 166 243 float/signal;
#X text 202 465 signal;
#X text 248 465 - regular signal output;
#X obj 88 486 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 202 487 signal;
#X text 248 487 - secondary (auxiliar) signal output;
#X obj 88 507 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 167 590 1) float - pitch (default 0), f 50;
#X text 167 605 2) float - harmonics (default 0), f 50;
#X text 167 620 3) float - timbre (default 0), f 50;
#X text 167 635 4) float - morph (default 0), f 50;
#X obj 4 529 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 119 550 -model <float>: set model number (default 0), f 56;
#X text 119 565 -trigger: set to trigger mode (default regular), f 56;
#X text 214 257 bang;
#X text 248 257 - control trigger (when in trigger mode);
#X text 148 285 trigger <float>;
#X text 248 285 - non zero sets to trigger mode;
#X text 160 299 model <float>;
#X text 136 313 harmonics <float>;
#X text 248 313 - set harmonics (0-1);
#X text 154 327 timbre <float>;
#X text 248 326 - set timbre (0-1);
#X text 160 341 morph <float>;
#X text 248 341 - set morph (0-1);
#X text 154 355 cutoff <float>;
#X text 160 369 decay <float>;
#X text 248 369 - set LPG decay (0-1);
#X text 248 355 - set LPG (LowPass Gate) cutoff/color (0-1);
#X text 167 650 5) float - cutoff (default 0.5), f 50;
#X text 167 665 6) float - decay (default 0.5), f 50;
#X obj 198 149 else/plaits~ 500;
#X text 54 87 [plaits~] is based on the "plaits" module from Mutable Instruments., f 64;
#N canvas 554 110 653 382 frequency 0;
#X obj 137 311 else/out~;
#X text 198 162 F#4;
#X msg 174 210 midi \, 69;
#X msg 185 237 hz \, 220;
#X obj 431 115 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 60;
#X obj 431 179 +~;
#X obj 420 270 else/out~;
#X obj 431 232 else/plaits~ -midi;
#X text 389 56 [plaits~] takes signal input for frequency in each mode and you can use it to perform FM., f 33;
#X obj 474 179 else/sine~ -midi;
#X obj 474 203 *~ 30;
#X obj 474 152 +~ 7.1;
#X msg 144 162 cv \, 0.1;
#X msg 156 185 voct \, -0.5;
#X text 225 187 F#3;
#X text 56 35 By default \, the pitch input is in Herts \, but you can change to "midi" \, "cv" (control voltage) or "voct" (volts per octave). In voct \, the the 0 volts reference value is "middle C" ("60" in MIDI pitch). In '-cv' this is the same but the signal is normalized as if the input from -1 to 1 corresponds to the standard of -5V to +5V. Use flags to set to a different mode at load time or the messages to change between settings., f 50;
#X obj 144 275 else/plaits~ -voct -0.7;
#X connect 2 0 16 0;
#X connect 3 0 16 0;
#X connect 4 0 5 0;
#X connect 4 0 11 0;
#X connect 5 0 7 0;
#X connect 7 0 6 0;
#X connect 7 1 6 1;
#X connect 9 0 10 0;
#X connect 10 0 5 1;
#X connect 11 0 9 0;
#X connect 12 0 16 0;
#X connect 13 0 16 0;
#X connect 16 0 0 0;
#X connect 16 1 0 1;
#X restore 462 141 pd frequency;
#N canvas 381 23 780 595 +details 0;
#N canvas 154 80 515 298 model-0 0;
#X text 79 46 The 'Pair of classic waveforms' engine is a virtual-analog synthesis of classic waveforms.;
#X text 77 192 AUX -> sum of two hardsync’ed waveforms \, the shape of which is controlled by MORPH and detuning by HARMONICS. A narrow pulse or wide notch results in silence!;
#X text 77 99 HARMONICS -> controls detuning between the two waves \; \; TIMBRE -> controls Pulse Width from narrow pulse to full square to hardsync formants \; \; MORPH -> waveforms: variable saw \, from triangle to saw with an increasingly wide notch (Braids’ CSAW).;
#X restore 254 133 pd model-0 (Pair of classic waveforms);
#N canvas 154 80 543 236 model-1 0;
#X text 79 46 Waveshaping oscillator: An asymmetric triangle processed by a waveshaper and a wavefolder.;
#X text 118 96 HARMONICS -> waveshaper waveform \; \; TIMBRE -> wavefolder amount \; \; MORPH -> waveform asymmetry \; \; AUX -> variant employing another wavefolder curve;
#X restore 273 154 pd model-1 (Waveshaping oscillator);
#N canvas 154 80 543 236 model-2 0;
#X text 79 46 Two operator FM: Two sine-wave oscillators modulating each other’s phase.;
#X text 118 96 HARMONICS -> frequency ratio \; \; TIMBRE -> modulation index \; \; MORPH -> : feedback \, in the form of operator 2 modulating its own phase (past 12 o’clock \, rough!) or operator 1’s phase (before 12 o’clock \, chaotic!). \; \; AUX -> sub-oscillator;
#X restore 316 175 pd model-2 (Two operator FM);
#N canvas 154 80 535 285 model-3 0;
#X text 103 33 Granular formant oscillator: Simulation of formants and filtered waveforms through the multiplication \, addition and synchronization of segments of sine waves.;
#X text 118 96 HARMONICS ->: frequency ratio between formant 1 and 2 \; \; TIMBRE -> formant frequency \; \; MORPH -> formant width and shape \; \; AUX -> simulation of filtered waveforms by windowed sine waves – a recreation of Braids’ Z*** models. HARMONICS controls the filter type (peaking \, LP \, BP \, HP).;
#X restore 244 196 pd model-3 (Granular formant oscillator);
#N canvas 154 80 535 285 model-4 0;
#X text 103 33 Harmonic oscillator: An additive mixture of harmonically-related sine waves;
#X text 80 96 HARMONICS -> number of bumps in the spectrum \; \; TIMBRE -> index of the most prominent harmonic \; \; MORPH -> bump shape – from flat and wide to peaked and narrow \; \; AUX -> variant including only the subset of harmonics present in the drawbars of a Hammond organ;
#X restore 292 217 pd model-4 (Harmonic oscillator);
#N canvas 154 80 515 298 model-5 0;
#X text 83 43 Wavetable oscillator: Four banks of 8x8 waveforms \, accessed by row and column \, with or without interpolation;
#X text 111 93 HARMONICS -> bank selection. 4 interpolated banks followed by the same 4 banks \, in reverse order \, without interpolation \; \; TIMBRE -> row index. Within a row \, the waves are sorted by spectral brightness \; \; MORPH -> column index \; \; AUX -> low-fi output., f 49;
#X restore 286 238 pd model-5 (Wavetable oscillator);
#N canvas 154 80 537 282 model-6 0;
#X text 132 39 Chords: Four-note chords \, played by VA or wavetable oscillators., f 34;
#X text 118 96 HARMONICS -> chord type \; \; TIMBRE -> chord inversion and transposition \; \; MORPH -> waveform. The first half of the knob goes through a selection of string-machine like raw waveforms \, the second half of the knob scans a small wavetable \; \; AUX -> root note of the chord.;
#X restore 370 259 pd model-6 (Chords);
#N canvas 154 80 543 296 model-7 0;
#X text 113 46 Vowel and speech synthesis: A collection of speech synthesis algorithms, f 52;
#X text 105 96 HARMONICS -> crossfades between formant filtering \, SAM \, and LPC vowels \, then goes through several banks of LPC words \; \; TIMBRE -> species selection \, from Daleks to chipmunks \; \; MORPH -> phoneme or word segment selection. Patch the trigger input to trigger the utterance of a word \, use the FM attenuverter to control the intonation and the MORPH attenuverter to control speed \; \; AUX: unfiltered vocal cords’ signal.;
#X restore 250 280 pd model-7 (Vowel and speech synthesis);
#N canvas 287 166 427 226 model-8 0;
#X text 47 38 Granular cloud: A swarm of 8 enveloped sawtooth waves.;
#X text 67 79 - HARMONICS -> amount of pitch randomization \; \; - TIMBRE -> grain density \; \; - MORPH -> grain duration and overlap \; \; - AUX -> variant with sine wave oscillators;
#X restore 496 133 pd model-8 (Granular cloud);
#N canvas 187 103 543 236 model-9 0;
#X text 89 52 Filtered noise: Variable-clock white noise processed by a resonant filter.;
#X text 95 105 - HARMONICS -> filter response \, from LP to BP to HP \; \; - TIMBRE -> clock frequency \; \; - MORPH -> filter resonance \; \; - AUX -> variant processed by two band-pass filters \, with their separation controlled by HARMONICS.;
#X restore 496 154 pd model-9 (Filtered noise);
#N canvas 165 81 543 236 model-10 0;
#X text 79 46 Particle noise: Dust noise processed by networks of all-pass or band-pass filters.;
#X text 100 89 - HARMONICS -> amount of frequency randomization \; \; - TIMBRE -> particle density \; \; - MORPH -> filter type – reverberating all-pass network before 12 o’clock \, then increasingly resonant band-pass filters \; \; - AUX -> raw dust noise;
#X restore 496 175 pd model-10 (Particle noise);
#N canvas 154 80 535 285 model-11 0;
#X text 103 33 Inharmonic string modeling: For your own pleasure \, a mini-Rings! When the TRIG input is not patched \, the resonator is excited by dust noise.;
#X text 103 110 - HARMONICS -> amount of inharmonicity \, or material selection \; \; - TIMBRE -> excitation brightness and dust density \; \; - MORPH -> decay time (energy absorption / internal LPG is disabled) \; \; - AUX -> raw exciter signal.;
#X restore 496 196 pd model-11 (Inharmonic string modeling);
#N canvas 154 80 535 285 model-12 0;
#X text 103 110 - HARMONICS -> amount of inharmonicity \, or material selection \; \; - TIMBRE -> excitation brightness and dust density \; \; - MORPH -> decay time (energy absorption / internal LPG is disabled) \; \; - AUX -> raw exciter signal.;
#X text 103 33 Modal resonator bank: For your own pleasure \, a mini-Rings! When the TRIG input is not patched \, the resonator is excited by dust noise.;
#X restore 496 217 pd model-12 (Modal resonator bank);
#N canvas 154 80 401 222 model-13 0;
#X text 122 39 Analog bass drum model;
#X text 84 84 - HARMONICS -> attack sharpness \; \; - TIMBRE -> brightness \; \; - MORPH -> decay time (internal LPG is disabled) \; \; - AUX -> emulation of another classic bass drum circuit., f 37;
#X restore 496 238 pd model-13 (Analog bass drum model);
#N canvas 154 80 537 282 model-14 0;
#X text 132 39 Analog snare drum model, f 34;
#X text 118 96 - HARMONICS -> balance of the harmonic and noisy components \; \; - TIMBRE -> balance between the different modes of the drum \; \; - MORPH -> decay time (internal LPG is disabled) \; \; - AUX -> emulation of another classic snare drum circuit.;
#X restore 496 259 pd model-14 (Analog snare drum model);
#N canvas 154 80 543 296 model-15 0;
#X text 113 46 Analog high-hat model, f 52;
#X text 105 96 - HARMONICS -> balance of the metallic and filtered noise \; \; - TIMBRE -> high-pass filter cutoff \; \; - MORPH -> decay time (internal LPG is disabled) \; \; - AUX -> variant with a different flavor of tuned noise based on ring-modulated square waves.;
#X restore 496 280 pd model-15 (Analog hi-hat drum model);
#N canvas 635 23 520 608 messages 0;
#X obj 104 105 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 104 251 harmonics \$1;
#X msg 122 272 timbre \$1;
#X msg 140 294 morph \$1;
#X text 106 115 harmonics, f 1;
#X obj 122 105 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 140 105 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 124 131 timbre, f 1;
#X text 142 131 morph, f 1;
#X obj 115 365 outlet;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 9 0;
#X connect 3 0 9 0;
#X connect 5 0 2 0;
#X connect 6 0 3 0;
#X coords 0 -1 1 1 60 140 2 100 100;
#X restore 62 160 pd messages;
#X obj 116 483 else/out~;
#X msg 157 294 model \$1;
#X obj 250 539 else/display;
#N canvas 367 55 453 432 (subpatch) 0;
#X floatatom 100 283 5 0 0 0 - - - 0;
#X obj 116 253 + 8;
#X obj 100 100 vradio 16 1 0 8 edneknek edneknek empty 0 -8 0 10 #dfdfdf #00ff00 #000000 0;
#X obj 116 100 vradio 16 1 0 8 edneknek edneknek empty 0 -8 0 10 #dfdfdf #dfdfdf #000000 0;
#X msg 217 180 color #dfdfdf #dfdfdf #000000;
#X msg 205 221 color #dfdfdf #dfdfdf #000000;
#X obj 100 317 outlet;
#X msg 195 249 color #dfdfdf #ff0000 #000000;
#X msg 209 146 color #dfdfdf #00ff00 #000000;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 2 0 4 0;
#X connect 2 0 8 0;
#X connect 3 0 1 0;
#X connect 3 0 5 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 2 0;
#X connect 7 0 3 0;
#X connect 8 0 2 0;
#X coords 0 -1 1 1 32 128 1 100 100;
#X restore 157 136 pd;
#X floatatom 157 271 5 0 0 0 - - - 0;
#X text 190 169 10;
#X text 190 185 11;
#X text 190 201 12;
#X text 190 217 13;
#X text 190 233 14;
#X text 190 249 15;
#X text 65 37 Plaits hass 16 synthesis techniques (or 'models'/'engines'). It also contains a built-in LPG (Low-Pass Gate) (with cutoff and decay settings) that you can use to trigger an enveloped sound. The controls are: 'Frequency' \, 'Harmonics' \, 'Timbre' and 'Morph' and the way they act depends on the chosen engine. Plaits has an auxiliary audio output with a different sound also depending on the model used. The 'model' message is used to choose between these options. For a description of each option \, check subpatches below:, f 111;
#X floatatom 178 334 5 0 0 0 - - - 12;
#X text 222 337 pitch;
#N canvas 574 80 492 391 LPG 0;
#X obj 197 338 outlet;
#X obj 197 199 bng 35 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X msg 294 262 decay \$1;
#X obj 119 215 tgl 30 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 223 262 cutoff \$1;
#X msg 119 263 trigger \$1;
#X obj 271 107 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 294 107 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 59 17 Use the 'trigger' message to set in and out of 'trigger' mode. Alternatively \, the '-trigger' flag sets to trigger mode at load time. In this mode you have to send bangs to trigger a built in LPG (LowPass Gate). The LPG has a cutoff setting and a decay parameter. This mode is useful for percussive sounds but note that for modes 12-15 that the cutoff and decay settings are disabled., f 62;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 4 0;
#X connect 7 0 2 0;
#X restore 187 368 pd LPG;
#X text 237 365 <-- open for trigger mode and LPG (LowPass Gate settings);
#X text 190 136 8;
#X text 190 153 9;
#X text 139 136 0;
#X text 139 153 1;
#X text 139 169 2;
#X text 139 185 3;
#X text 139 201 4;
#X text 139 217 5;
#X text 139 233 6;
#X text 139 249 7;
#X text 318 322 You can use the '-model' flag to set a model at load time.;
#X obj 157 437 else/plaits~ 500;
#X obj 250 508 route name;
#X msg 196 402 dump;
#X msg 246 402 print;
#X obj 273 480 print info;
#X obj 623 414 else/openfile -h https://pichenettes.github.io/mutable-instruments-documentation/modules/plaits/manual/# Manual;
#X text 423 401 Click on this link for the original manual from Mutable Instruments:, f 35;
#X text 361 446 The [plaits~] object is a simplified version adapted to Pd \, so you don't have signal input for model \, FM \, harmonics \, timbre and morph. You also don't have attenuators by extension. You can perform FM on your own here in Pd and use control messages for the other parameters only \, which I think it's reasonable in the Pd world.;
#X connect 16 0 44 0;
#X connect 18 0 44 0;
#X connect 20 0 21 0;
#X connect 21 0 18 0;
#X connect 29 0 44 0;
#X connect 31 0 44 0;
#X connect 44 0 17 0;
#X connect 44 1 17 1;
#X connect 44 2 45 0;
#X connect 44 2 48 0;
#X connect 45 0 19 0;
#X connect 46 0 44 0;
#X connect 47 0 44 0;
#X restore 468 163 pd +details;
#X text 100 271 <hz>/<midi>/<cv>/<voct>;
#X text 248 271 - set frequency mode to hz \, midi \, cv or voct;
#X text 190 507 anything;
#X text 248 508 - output information on setting model or 'dump';
#X text 208 383 print;
#X text 248 383 - output information on terminal window;
#X text 248 299 - set model number (0-15) and output name;
#X text 248 397 - output information on rightmost outlet;
#X text 214 397 dump;
#X text 119 535 -cv/-midi/-voct: set to pitch input in CV \, MIDI \, or voct (default hz), f 71;
#X obj 88 415 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 202 416 signal;
#X obj 88 436 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 248 416 - signal trigger input;
#X text 202 436 signal;
#X text 248 436 - level for built-in VCA or excitation signal;
#N canvas 558 71 467 361 signal-trigger 0;
#X obj 68 268 else/out~;
#X obj 86 28 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 109 28 vsl 15 128 0 1 0 0 vetgetge getgtgte empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 229 193 else/trig2bang~;
#X obj 229 161 else/randpulse2~ 10;
#X obj 229 220 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X text 153 60 When you have a signal connected to the 2nd inlet \, you force the object into 'trigger mode' but it now only expects a signal trigger \, which is a pulse signal., f 41;
#X msg 42 183 cutoff \$1;
#X msg 109 183 decay \$1;
#X obj 109 232 else/plaits~ 500;
#X connect 1 0 7 0;
#X connect 2 0 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 0 9 1;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 9 1 0 1;
#X restore 432 184 pd signal-trigger;
#N canvas 558 71 518 530 level(VCA)-Excitation 0;
#X floatatom 204 117 5 0 0 0 - - - 12;
#X obj 204 148 else/plaits~ 500;
#X obj 182 193 out~;
#X text 74 266 Hence \, this allows amplitude modulation for all models \, execpt for models 11 (Inharmonic string modeling) and 12 (Modal resonator bank) where the connected signal is used as an excitation signal instead., f 57;
#X obj 129 436 out~;
#X obj 110 398 else/plaits~ -model 11 500 0.7 1 0.5;
#X obj 323 363 else/dust~ 100;
#X msg 127 371 model 12;
#X msg 110 346 model 11;
#X text 259 431 disconnect the signal to the 2nd inlet to hear the difference., f 32;
#X text 75 41 The [plaits~] object has a built in VCA level control input. To activate it you just need to connect a signal to the 3rd inlet. Only positive values work and "1" means no gain alteration., f 63;
#X obj 297 114 osc~ 5;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X connect 6 0 5 2;
#X connect 7 0 5 0;
#X connect 8 0 5 0;
#X connect 11 0 1 2;
#X restore 390 206 pd level(VCA)-Excitation;
#X connect 1 0 52 0;
#X connect 52 0 0 0;
#X connect 52 1 0 1;
