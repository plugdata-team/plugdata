#N canvas 517 56 560 500 10;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 211 40 cnv 4 4 4 empty empty impulse 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 283 40 cnv 4 4 4 empty empty oscillator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 229 187 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 3 3 cnv 15 301 42 empty empty bl.imp2~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 22 40 cnv 4 4 4 empty empty Bandlimited 0 28 2 18 #e0e0e0 #000000 0;
#X text 60 140 Because this is an abstraction and Pd is still limited in the way it handles it \, this object does not have any arguments., f 67;
#X obj 229 249 else/out~;
#X obj 125 40 cnv 4 4 4 empty empty two-sided 0 28 2 18 #e0e0e0 #000000 0;
#X text 60 87 [bl.imp2~] is a two sided impulse oscillator like [else/imp2~] \, but it is bandlimited with the upsampling/filtering technique. This makes the object quite inefficient CPU wise \, but is an easy way to implement a bandlimited oscillator., f 67;
#X text 25 220 see also:;
#X obj 25 284 else/blip~;
#X obj 25 263 else/bl.imp~;
#X obj 25 242 else/imp2~;
#X obj 229 215 else/bl.imp2~;
#N canvas 670 106 449 354 midi 0;
#X msg 150 150 midi \$1;
#X obj 150 121 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 174 186 7 0 0 0 - - - 0;
#X obj 150 250 else/out~;
#X text 40 27 By default \, frequency input is in hertz \, but if you use the 'midi' message or '-midi' flag you can change it to MIDI pitch input \, where it is not really bound to the 0 to 127 range \, neither it has to be integers. This is just like using [mtof~]...;
#X obj 150 219 else/bl.imp2~ -midi 60;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 5 0 3 0;
#X restore 468 278 pd midi;
#X obj 3 440 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 471 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 3 315 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 364 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 104 373 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 178 373 signal -;
#X obj 104 325 cnv 17 3 30 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 135 326 float/signal -;
#X text 239 326 frequency in hz;
#X text 239 373 impulse oscillator signal;
#X text 141 449 1) float;
#X text 135 343 midi <float> -;
#X text 239 343 non zero sets to frequency input in MIDI pitch;
#X obj 3 400 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 143 416 -m: sets frequency input in MIDI pitch (default hertz);
#X text 207 449 - frequency in midi pitch or hertz (default 0);
#X text 288 185 <-- frequency;
#X connect 10 0 22 0;
#X connect 22 0 15 0;
