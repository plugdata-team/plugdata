#N canvas 416 28 571 594 10;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 123 40 cnv 4 4 4 empty empty oscillator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 260 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 398 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 13 482 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 123 407 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 122 268 cnv 17 3 75 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 13 565 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 155 266 float/signal -;
#X text 255 266 frequency in hz;
#X obj 123 351 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 191 407 signal -;
#X text 256 374 phase offset (modulation input);
#X obj 204 139 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 3 3 cnv 15 301 42 empty empty bl.osc~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 204 197 else/out~;
#X obj 22 40 cnv 4 4 4 empty empty Bandlimited 0 28 2 18 #e0e0e0 #000000 0;
#X text 264 138 <-- hz;
#X obj 123 373 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 172 544 - initial phase offset (default 0), f 61;
#N canvas 611 58 517 609 example 0;
#X floatatom 171 126 9 0 0 0 - - - 0;
#X obj 174 93 hsl 128 15 50 2000 1 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 171 159 sig~ 200;
#X obj 245 200 /~ 2.01;
#X obj 245 225 osc~;
#X obj 98 251 *~ 1.52;
#X obj 245 249 *~ 0.3;
#X obj 95 529 else/out~;
#X obj 171 251 else/imp~;
#X text 298 250 Phase Modulation;
#X text 61 93 master frequency;
#X text 39 245 synced frequency, f 9;
#X obj 121 335 else/oscope~ 371 133 8 3 128 -1.1 1.1 300 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X obj 95 501 else/plate.rev~;
#X obj 98 279 else/bl.osc~ square 20, f 25;
#X text 76 30 Here's an example with hard sync via impulses and phase modulation of a band limited square wave. Note that hard sync and phase modulation cause aliasing.;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 2 0 8 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 14 0;
#X connect 6 0 14 2;
#X connect 8 0 14 1;
#X connect 13 0 7 0;
#X connect 13 1 7 1;
#X connect 14 0 12 0;
#X connect 14 0 13 0;
#X restore 473 230 pd example;
#X text 109 493 1) symbol;
#X text 171 493 -;
#X text 191 352 signal -;
#X text 256 352 phase sync (impulse ressets internal phase);
#X text 257 407 bandlimited oscillator signal;
#X text 115 511 2) float;
#X text 115 528 3) float;
#X text 115 544 4) float;
#X text 172 511 - number of partials (default 1), f 61;
#X text 191 374 signal -;
#X text 173 283 n <float> -;
#X text 255 283 set number of partials (rewrites all tables);
#X text 179 330 anything -;
#X text 255 330 set waveforms: saw \, saw2 \, tri \, square & imp;
#X text 60 86 [bl.osc~] is a bandlimited oscillator based on [else/wavetable~]. It has wavetables built with a variable number of partials for different waveforms: 'saw' \, 'saw2' \, 'tri' \, 'square' and 'imp'., f 67;
#N canvas 527 93 572 563 details 0;
#X obj 128 108 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 128 461 else/out~;
#X msg 177 179 saw2;
#X msg 169 158 saw;
#X msg 156 136 tri;
#X msg 183 203 square;
#X msg 194 224 imp;
#X text 347 119 see also:;
#X obj 347 170 else/saw~;
#X obj 347 196 else/saw2~;
#X obj 347 146 else/tri~;
#X obj 347 220 else/square~;
#X obj 347 245 else/imp~;
#X msg 67 203 n \$1;
#X floatatom 67 175 5 1 20 0 - - - 0;
#X text 11 154 set number of partials, f 13;
#X text 68 20 There are 2 versions of sawtooth waveforms (see else/saw~ and else/saw2~) \, plus a triangular waveform (see else/tri~) \, a square (see else/square~) and impulse (see else/imp~). Setting the number of partials rewrites all internal tables (whatch for clicks)., f 75;
#X obj 160 312 else/oscope~ 371 133 8 3 128 -1.1 1.1 300 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X obj 128 276 else/bl.osc~ tri 20 400;
#X connect 0 0 18 0;
#X connect 2 0 18 0;
#X connect 3 0 18 0;
#X connect 4 0 18 0;
#X connect 5 0 18 0;
#X connect 6 0 18 0;
#X connect 13 0 18 0;
#X connect 14 0 13 0;
#X connect 18 0 1 0;
#X connect 18 0 17 0;
#X restore 473 143 pd details;
#X text 28 145 see also:;
#X obj 31 167 bl.saw~;
#X obj 31 188 bl.square~;
#X obj 31 208 bl.tri~;
#X obj 31 229 bl.imp~;
#X obj 204 172 else/bl.osc~ saw 10 260;
#N canvas 670 106 449 338 midi 0;
#X msg 150 150 midi \$1;
#X obj 150 121 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 174 186 7 0 0 0 - - - 0;
#X obj 150 250 else/out~;
#X text 40 27 By default \, frequency input is in hertz \, but if you use the 'midi' message or '-midi' flag you can change it to MIDI pitch input \, where it is not really bound to the 0 to 127 range \, neither it has to be integers. This is just like using [mtof~]...;
#X obj 150 219 else/bl.osc~ -midi tri 10 60;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 5 0 3 0;
#X restore 491 165 pd midi;
#X text 172 528 - frequency in midi or hertz (default 0), f 61;
#N canvas 494 66 707 453 sync 0;
#X obj 72 214 vsl 15 100 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 72 182 else/sig2float~;
#X text 349 22 Syncing the phase with control messages is useful for LFOs and control with MIDI. A sync with audio is useful for the "hard sync" technique \, where an oscillator is synced according to the frequency of a master frequency., f 50;
#X obj 393 268 else/out~;
#X obj 460 168 nbx 5 14 110 200 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 561 194 Master oscillator;
#X text 541 228 Slave oscillator;
#X obj 460 194 else/imp~ 110;
#X text 377 347 NOTE:;
#X msg 248 99 0.25;
#X msg 174 98 0.75;
#X msg 142 98 1;
#X msg 214 98 0.5;
#X obj 142 130 else/impseq~;
#X obj 206 223 setdsp~;
#X text 39 21 The second inlet resets the phase \, but unlike [saw~] \, it has no way to set with control data. This is because that is more suited to low ferquencies., f 41;
#X text 35 343 You can then reset the oscillator with an impulse signal. The impulse values need to be > 0 and <= 1 (otherwise ignored). Because phase is cyclical \, the value of 1 represents the "phase 0" of the cycle \, where the impulse occurs. Send it impulses above and check the result., f 41;
#X msg 393 188 soft \$1;
#X obj 393 163 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 349 87 Soft sync is also possible with the '-soft' flag or the "soft" message \, where it alternates between positive and negative frequencies and sounds less harsh., f 50;
#X text 379 375 The "phase sync" inlet is quite different from the "phase offset" inlet. They are completely independent!, f 43;
#X obj 72 158 else/bl.osc~ saw 10 0.25;
#X obj 393 226 else/bl.osc~ saw 10 250;
#X connect 1 0 0 0;
#X connect 4 0 7 0;
#X connect 7 0 22 1;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 21 1;
#X connect 17 0 22 0;
#X connect 18 0 17 0;
#X connect 21 0 1 0;
#X connect 22 0 3 0;
#X restore 491 186 pd sync;
#X text 184 493 sets waveform (obligatory): saw \, saw2 \, tri \, square and imp);
#N canvas 325 174 737 337 phase 0;
#X obj 492 203 else/out~;
#X text 577 154 Phase Modulation:;
#X obj 561 124 osc~ 50.01;
#X text 28 31 The second argument sets an initial phase (or "phase offset"). This is also settable with the third inlet. This allows you to control two oscillators with the same frequency falling in and out of phase. Another feature is phase modulation., f 53;
#X text 453 45 The phase values are wrapped into the 0-1 range \, since the phase cycle is from 0 to 1 (where 1 is also the start of another cycle)., f 33;
#X obj 121 255 else/out~;
#X obj 121 219 +~;
#X text 406 118 1;
#X obj 274 118 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 271 142 4 0 0 0 - - - 0;
#X text 254 118 0;
#X obj 271 166 else/float2sig~ 10;
#X text 254 250 Note that out of phase sawtooth waveforms do not cancel each other, f 23;
#X obj 90 154 else/bl.osc~ saw 10 220 0.5;
#X obj 136 192 else/bl.osc~ saw 10 220;
#X obj 492 150 else/bl.osc~ saw 10 200, f 12;
#X connect 2 0 15 2;
#X connect 6 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 14 2;
#X connect 13 0 6 0;
#X connect 14 0 6 1;
#X connect 15 0 0 0;
#X restore 419 208 pd phase modulation;
#X text 155 298 midi <float> -;
#X text 255 298 non zero sets to frequency input in MIDI pitch;
#X text 155 314 soft <float> -;
#X text 255 314 non zero sets to soft sync mode;
#X obj 3 433 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 133 458 -soft: sets to soft sync mode (default hard);
#X text 133 443 -midi: sets frequency input in MIDI pitch (default hertz);
#X connect 20 0 50 0;
#X connect 50 0 23 0;
