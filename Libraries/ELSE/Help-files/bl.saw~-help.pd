#N canvas 435 41 560 579 10;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 121 41 cnv 4 4 4 empty empty sawtooth 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 203 41 cnv 4 4 4 empty empty oscillator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 549 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 229 162 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 3 4 cnv 15 301 42 empty empty bl.saw~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X obj 22 41 cnv 4 4 4 empty empty Bandlimited 0 28 2 18 #e0e0e0 #000000 0;
#X text 44 192 see also:;
#X obj 229 222 else/out~;
#X obj 3 496 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 44 214 else/saw~;
#X obj 3 291 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 402 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 122 411 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 122 358 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 165 379 float/signal -;
#X obj 122 378 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 201 411 signal -;
#X text 270 379 phase offset (modulation input);
#X text 270 359 phase sync (ressets internal phase);
#X text 165 359 float/signal -;
#X text 267 411 sawtooth wave signal;
#X text 159 508 1) float;
#X text 218 527 - initial phase offset (default 0);
#X text 159 527 2) float;
#X obj 229 187 else/bl.saw~ 400;
#X obj 45 240 else/bl.saw2~;
#N canvas 670 106 449 354 midi 0;
#X msg 150 150 midi \$1;
#X obj 150 121 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 174 186 7 0 0 0 - - - 0;
#X obj 150 250 else/out~;
#X obj 150 219 else/bl.saw~ -midi 60;
#X text 40 27 By default \, frequency input is in hertz \, but if you use the 'midi' message or '-midi' flag you can change it to MIDI pitch input \, where it is not really bound to the 0 to 127 range \, neither it has to be integers. This is just like using [mtof~]...;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X restore 485 205 pd midi;
#X obj 3 442 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 122 300 cnv 17 3 50 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 164 318 midi <float> -;
#X text 257 318 non zero sets to frequency input in MIDI pitch;
#X text 164 302 float/signal - frequency in hz or midi;
#X text 218 508 - frequency in midi pitch or hertz (default 0);
#N canvas 448 51 707 453 sync 0;
#X obj 72 214 vsl 15 100 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 72 182 else/sig2float~;
#X text 349 22 Syncing the phase with control messages is useful for LFOs and control with MIDI. A sync with audio is useful for the "hard sync" technique \, where an oscillator is synced according to the frequency of a master frequency., f 50;
#X obj 417 271 else/out~;
#X obj 463 168 nbx 5 14 110 200 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 564 194 Master oscillator;
#X text 526 229 Slave oscillator;
#X obj 463 194 else/imp~ 110;
#X text 392 344 NOTE:;
#X msg 227 99 0.25;
#X msg 153 98 0.75;
#X msg 121 98 1;
#X msg 193 98 0.5;
#X obj 121 130 else/impseq~;
#X obj 72 158 else/bl.saw~ 0.25;
#X obj 206 223 setdsp~;
#X text 39 21 The second inlet resets the phase \, but unlike [saw~] \, it has no way to set with control data. This is because that is more suited to low ferquencies., f 41;
#X text 35 343 You can then reset the oscillator with an impulse signal. The impulse values need to be > 0 and <= 1 (otherwise ignored). Because phase is cyclical \, the value of 1 represents the "phase 0" of the cycle \, where the impulse occurs. Send it impulses above and check the result., f 41;
#X msg 386 188 soft \$1;
#X obj 386 163 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 349 87 Soft sync is also possible with the '-soft' flag or the "soft" message \, where it alternates between positive and negative frequencies and sounds less harsh., f 50;
#X obj 417 228 else/bl.saw~ 200;
#X text 379 375 The "phase sync" inlet is quite different from the "phase offset" inlet. They are completely independent!, f 43;
#X connect 1 0 0 0;
#X connect 4 0 7 0;
#X connect 7 0 21 1;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 14 1;
#X connect 14 0 1 0;
#X connect 18 0 21 0;
#X connect 19 0 18 0;
#X connect 21 0 3 0;
#X restore 485 228 pd sync;
#N canvas 836 191 377 470 waveform 0;
#X obj 101 79 cnv 15 198 148 empty empty empty 20 12 0 14 #e8ecf4 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-waveform 400 float 1;
#A 0 0 0.995 0.99 0.985 0.98 0.975 0.97 0.965 0.96 0.955 0.95 0.945 0.94 0.935 0.93 0.925 0.92 0.915 0.91 0.905 0.9 0.895 0.89 0.885 0.88 0.875 0.87 0.865 0.86 0.855 0.85 0.845 0.84 0.835 0.83 0.825 0.82 0.815 0.81 0.805 0.8 0.795 0.79 0.785 0.78 0.775 0.77 0.765 0.76 0.755 0.75 0.745 0.74 0.735 0.73 0.725 0.72 0.715 0.71 0.705 0.7 0.695 0.69 0.685 0.68 0.675 0.67 0.665 0.66 0.655 0.65 0.645 0.64 0.635 0.63 0.625 0.62 0.615 0.61 0.605 0.6 0.595 0.59 0.585 0.58 0.575 0.57 0.565 0.56 0.555 0.55 0.545 0.54 0.535 0.53 0.525 0.52 0.515 0.51 0.505 0.5 0.495 0.49 0.485 0.48 0.475 0.47 0.465 0.46 0.455 0.45 0.445 0.44 0.435 0.43 0.425 0.42 0.415 0.41 0.405 0.4 0.395 0.39 0.385 0.38 0.375 0.37 0.365 0.36 0.355 0.35 0.345 0.34 0.335 0.33 0.325 0.32 0.315 0.31 0.305 0.3 0.295 0.29 0.285 0.28 0.275 0.27 0.265 0.26 0.255 0.25 0.245 0.24 0.235 0.23 0.225 0.22 0.215 0.21 0.205 0.2 0.195 0.19 0.185 0.18 0.175 0.17 0.165 0.16 0.155 0.15 0.145 0.14 0.135 0.13 0.125 0.12 0.115 0.11 0.105 0.1 0.095 0.09 0.085 0.08 0.075 0.07 0.065 0.06 0.055 0.05 0.045 0.04 0.035 0.03 0.025 0.02 0.015 0.00999999 0.005 0 -0.005 -0.00999999 -0.015 -0.02 -0.025 -0.03 -0.035 -0.04 -0.045 -0.05 -0.0549999 -0.0599999 -0.0650001 -0.0700001 -0.075 -0.08 -0.085 -0.09 -0.095 -0.1 -0.105 -0.11 -0.115 -0.12 -0.125 -0.13 -0.135 -0.14 -0.145 -0.15 -0.155 -0.16 -0.165 -0.17 -0.175 -0.18 -0.185 -0.19 -0.195 -0.2 -0.205 -0.21 -0.215 -0.22 -0.225 -0.23 -0.235 -0.24 -0.245 -0.25 -0.255 -0.26 -0.265 -0.27 -0.275 -0.28 -0.285 -0.29 -0.295 -0.3 -0.305 -0.31 -0.315 -0.32 -0.325 -0.33 -0.335 -0.34 -0.345 -0.35 -0.355 -0.36 -0.365 -0.37 -0.375 -0.38 -0.385 -0.39 -0.395 -0.4 -0.405 -0.41 -0.415 -0.42 -0.425 -0.43 -0.435 -0.44 -0.445 -0.45 -0.455 -0.46 -0.465 -0.47 -0.475 -0.48 -0.485 -0.49 -0.495 -0.5 -0.505 -0.51 -0.515 -0.52 -0.525 -0.53 -0.535 -0.54 -0.545 -0.55 -0.555 -0.56 -0.565 -0.57 -0.575 -0.58 -0.585 -0.59 -0.595 -0.6 -0.605 -0.61 -0.615 -0.62 -0.625 -0.63 -0.635 -0.64 -0.645 -0.65 -0.655 -0.66 -0.665 -0.67 -0.675 -0.68 -0.685 -0.69 -0.695 -0.7 -0.705 -0.71 -0.715 -0.72 -0.725 -0.73 -0.735 -0.74 -0.745 -0.75 -0.755 -0.76 -0.765 -0.77 -0.775 -0.78 -0.785 -0.79 -0.795 -0.8 -0.805 -0.81 -0.815 -0.82 -0.825 -0.83 -0.835 -0.84 -0.845 -0.85 -0.855 -0.86 -0.865 -0.87 -0.875 -0.88 -0.885 -0.89 -0.895 -0.9 -0.905 -0.91 -0.915 -0.92 -0.925 -0.93 -0.935 -0.94 -0.945 -0.95 -0.955 -0.96 -0.965 -0.97 -0.975 -0.98 -0.985 -0.99 0;
#X coords -10 1.05 410 -1.05 200 150 1 0 0;
#X restore 100 78 graph;
#X text 48 235 phase:;
#X text 98 235 0;
#X text 290 235 1;
#X text 190 235 0.5;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 200 75 1 0 0;
#X restore 100 78 graph;
#X text 87 295 see also:;
#X text 90 378 see also:;
#X text 46 407 A variable sawtooth waveform oscillator that also becomes a triangular osccilator., f 43;
#X text 38 323 For a different sawtooth waveform;
#X obj 159 294 else/bl.saw2~;
#X obj 162 377 else/bl.vsaw~;
#X text 51 19 This is the waveform of this oscillator. Not really like this because it is band-limited., f 44;
#X restore 460 182 pd waveform;
#X text 46 88 [bl.saw~] is a sawtooth oscillator like [else/saw~] \, but it is bandlimited. Use [saw~] mostly if you need a perfect sawtooth \, which is usually the case when you want a LFO. The [bl.saw~] version is for proper synthesis as it is anti-aliased. This version also has input for pitch in MIDI and no way to sync at control rate., f 75;
#N canvas 325 174 908 347 phase 0;
#X obj 558 184 else/out~;
#X text 670 131 Phase Modulation:;
#X obj 651 103 osc~ 50.01;
#X text 28 31 The second argument sets an initial phase (or "phase offset"). This is also settable with the third inlet. This allows you to control two oscillators with the same frequency falling in and out of phase. Another feature is phase modulation., f 53;
#X text 464 43 The phase values are wrapped into the 0-1 range \, since the phase cycle is from 0 to 1 (where 1 is also the start of another cycle).;
#X obj 121 255 else/out~;
#X obj 121 219 +~;
#X text 364 118 1;
#X obj 232 118 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 229 142 4 0 0 0 - - - 0;
#X text 212 118 0;
#X obj 229 166 else/float2sig~ 10;
#X text 240 235 Note that out of phase sawtooth waveforms do not cancel each other, f 23;
#X obj 78 154 else/bl.saw~ 220 0.5;
#X obj 136 192 else/bl.saw~ 220;
#X obj 558 131 else/bl.saw~ 200;
#X connect 2 0 15 2;
#X connect 6 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 14 2;
#X connect 13 0 6 0;
#X connect 14 0 6 1;
#X connect 15 0 0 0;
#X restore 413 251 pd phase modulation;
#X text 164 336 soft <float> -;
#X text 257 336 non zero sets to soft sync mode;
#X text 133 469 -soft: sets to soft sync mode (default hard);
#X text 289 161 <-- frequency;
#X text 133 454 -midi: sets frequency input in MIDI pitch (default hertz);
#X connect 11 0 33 0;
#X connect 33 0 16 0;
