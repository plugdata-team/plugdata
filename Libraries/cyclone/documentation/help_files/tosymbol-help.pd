#N canvas 560 126 558 436 10;
#X obj 2 244 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 313 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 344 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 86 253 cnv 17 3 54 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 85 320 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 181 351 (none);
#X obj 197 186 cyclone/tosymbol;
#X obj 2 427 cnv 1 550 1 empty empty empty 0 0 0 4 #fcfcfc #fcfcfc 0;
#X obj 2 406 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 181 321 symbol;
#X obj 2 4 cnv 15 553 42 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X symbolatom 197 217 10 0 0 0 - - - 0;
#X obj 149 215 print;
#X text 259 155 float;
#X text 263 217 symbol;
#N canvas 750 282 526 402 separator 0;
#X symbolatom 238 355 0 0 0 0 - - - 0;
#X obj 115 232 trigger bang anything;
#X msg 115 270 one two three four;
#X msg 115 129 separator /;
#X msg 242 191 separator;
#X text 307 191 <= removes all spaces;
#X obj 273 270 cyclone/loadmess 1 2 3 4;
#X text 75 26 When converting a message composed of elements separated by spaces \, you can define a different "separator character" \, which will substitute the empty space on the converted symbol. This is done via the "separator" message or via the @separator attribute. Check below:;
#X msg 221 163 separator " ";
#X text 308 164 <= space separator (default);
#X text 166 355 symbol ==>;
#X text 296 129 <= 1 or more characters;
#X msg 203 129 separator ||;
#X obj 238 316 cyclone/tosymbol @separator |;
#X msg 34 129 separator -;
#X connect 1 0 2 0;
#X connect 1 1 13 0;
#X connect 2 0 13 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 6 0 13 0;
#X connect 8 0 1 0;
#X connect 12 0 1 0;
#X connect 13 0 0 0;
#X connect 14 0 1 0;
#X restore 455 214 pd separator;
#X obj 197 155 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#N canvas 387 23 818 704 more 0;
#X obj 503 115 cyclone/tosymbol;
#X symbolatom 503 169 10 0 0 0 - - - 0;
#X symbolatom 95 521 40 0 0 0 - - - 0;
#X obj 95 546 print;
#X obj 122 121 cyclone/tosymbol;
#X symbolatom 122 175 20 0 0 0 - - - 0;
#X obj 138 148 print;
#X obj 171 61 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 122 84 cyclone/pak 0 0 0;
#X obj 234 61 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 110 61 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 72 22 Convert list of floats to symbol:;
#X obj 511 305 cyclone/tosymbol;
#X symbolatom 511 359 10 0 0 0 - - - 0;
#X obj 527 332 print;
#X text 429 223 Convert anything (not a list message) to a symbol message:;
#X msg 511 267 x y z;
#X obj 99 329 cyclone/tosymbol;
#X symbolatom 99 383 20 0 0 0 - - - 0;
#X obj 115 356 print;
#X text 49 240 Convert other list messages to symbol:;
#X msg 99 278 1 2 three;
#X text 44 575 But it's hard to convert message with more than one element (list or anything) to a symbol in Pd Vanilla. In Max \, you can have any number of elements for a symbol message in a message box if you put it inside quotes (ex. "1 2 3" or "hi sir"). Since that is not the case in Pd \, [tosymbol] really comes in handy for converting any message type to a symbol!;
#X msg 177 278 list one 2 3;
#X msg 608 604 list hi;
#X obj 608 637 print;
#X symbolatom 549 454 10 0 0 0 - - - 0;
#X obj 549 480 cyclone/tosymbol;
#X symbolatom 549 509 10 0 0 0 - - - 0;
#X text 443 418 A symbol goes through unchanged:;
#X text 43 442 Note: In Pd Vanilla \, any message typed into an atom symbol box is treated as a symbol message \, even if it contains spaces.;
#X text 67 500 Type anything with spaces \, a symbol message comes out:;
#X symbolatom 669 169 10 0 0 0 - - - 0;
#X obj 669 115 symbol;
#X text 430 42 Convert symbolic atoms to symbol messages (like [symbol]):;
#X obj 519 142 print a;
#X msg 503 77 a;
#X msg 669 77 b;
#X obj 685 142 print b;
#X text 445 556 Also note that 1 element lists are already automatically converted to symbols in Pd:;
#X connect 0 0 1 0;
#X connect 0 0 35 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 4 0 6 0;
#X connect 7 0 8 1;
#X connect 8 0 4 0;
#X connect 9 0 8 2;
#X connect 10 0 8 0;
#X connect 12 0 13 0;
#X connect 12 0 14 0;
#X connect 16 0 12 0;
#X connect 17 0 18 0;
#X connect 17 0 19 0;
#X connect 21 0 17 0;
#X connect 23 0 17 0;
#X connect 24 0 25 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 33 0 32 0;
#X connect 33 0 38 0;
#X connect 36 0 0 0;
#X connect 37 0 33 0;
#X restore 484 189 pd more;
#X text 53 90 [tosymbol] converts any kind of message to a symbol message (maximum of 2048 characters). Start by sending it a float with the number box below and see how it converts to a symbol message.;
#X text 169 272 anything;
#X text 230 272 - message to convert to symbol;
#X text 230 291 - sets the separator character;
#X text 109 291 separator <symbol>;
#X text 230 321 - converted symbol message;
#X obj 2 372 cnv 3 550 3 empty empty attributes 8 12 0 13 #dcdcdc #000000 0;
#X text 105 381 @separator <symbol>;
#X text 225 381 - sets the separator character (default "space");
#X text 193 254 bang;
#X text 230 254 - does nothing \, just goes right through;
#X obj 17 56 cyclone/comment 0 14 DejaVu\ Sans\ Mono empty 0 0 0 0 0 255 255 255 0 0 Convert anything to symbol;
#X obj 16 4 cyclone/comment 0 33 DejaVu\ Sans\ Mono empty 0 0 0 0 0 255 255 255 0 0 tosymbol;
#X obj 322 28 cyclone/comment 0 13 DejaVu\ Sans\ Mono empty 0 224 228 220 0 255 255 255 0 0 Objects cloned from Max/MSP;
#X obj 363 4 cyclone/comment 0 24 DejaVu\ Sans\ Mono empty 0 224 228 220 0 255 255 255 0 0 cyclone;
#X connect 6 0 14 0;
#X connect 6 0 15 0;
#X connect 19 0 6 0;
