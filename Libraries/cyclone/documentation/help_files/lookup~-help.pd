#N canvas 516 32 562 564 10;
#X obj 5 538 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 5 352 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 443 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 474 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 101 361 cnv 17 3 30 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 101 397 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 167 360 signal;
#X obj 101 419 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 101 452 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 150 496 2) float;
#X text 168 452 signal;
#X text 150 479 1) symbol;
#X text 150 512 3) float;
#X text 132 397 float/signal;
#X text 132 419 float/signal;
#X text 221 452 - output of transfer function lookup (waveshaping), f 52;
#N canvas 767 189 359 178 load_sample 0;
#X obj 22 65 soundfiler;
#X floatatom 22 90 8 0 0 0 - - - 0;
#X obj 22 113 - 1;
#X obj 22 142 outlet;
#X text 41 14 Load voice.wav sample file into a table;
#X text 75 92 number of samples;
#X text 93 67 <= loads file into table/array;
#X text 53 114 find maximum index;
#X obj 22 40 cyclone/loadmess read -resize violin.wav \$0-violin;
#X obj 218 120 table \$0-violin;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 8 0 0 0;
#X restore 269 209 pd load_sample;
#X text 221 481 - array/table name to be used for lookup, f 52;
#X obj 3 4 cnv 15 553 42 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 3 3 graph;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X text 72 134 This also allows other functionalities. For example \, an LFO sine wave can scan through an audio sample forward and reverse \, accelerating and decelerating \, resulting in a turntable scratch effect. Check below., f 60;
#X text 131 377 set <symbol>;
#X text 221 376 - sets the array/table to be used for lookup, f 52;
#X text 338 231 end point;
#X obj 195 231 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 269 231 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 221 359 - signal to be used as index, f 52;
#X text 221 397 - start point of the array, f 52;
#X text 221 419 - end point of the array, f 52;
#N canvas 578 98 506 547 start/end 0;
#X text 71 18 Input values (from -1 to 1) are mapped to table indexes. The default table size is 512 points \, so the default start and end points are \, respectively \, 0 and 511 (since the table indexes are from 0 to 511).;
#X text 73 80 You can specify another table size by setting an endpoint that corresponds to the last index (table size - 1).;
#X obj 228 317 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 302 317 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 155 226 cyclone/triangle~ 1;
#X obj 305 290 hsl 128 15 0 62078 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 231 262 hsl 128 15 0 62078 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 253 261 start point;
#X text 339 290 end point;
#X text 75 118 If you raise the starting point \, note that the table size will decrease. Also \, if the start point is greater than the end point \, then the indexes are reversed. Test it below:;
#X obj 155 192 phasor~ 1;
#X text 87 454 The minimum starting point is the index 0 \, and the maximum ending point is equal to the greatest index in the table. If you specify less or more than that \, the actual value will be clipped to those min/max values.;
#X obj 39 268 cyclone/scope~ 95 66 256 3 128 -1 1 0 0 0 0 205 229 232 74 79 77 96 98 102 0 empty;
#X obj 155 338 cyclone/lookup~ \$0-violin;
#X obj 133 375 output~;
#X connect 2 0 13 1;
#X connect 3 0 13 2;
#X connect 4 0 12 0;
#X connect 4 0 13 0;
#X connect 5 0 3 0;
#X connect 6 0 2 0;
#X connect 10 0 4 0;
#X connect 13 0 14 0;
#X connect 13 0 14 1;
#X restore 428 256 pd start/end points;
#X text 221 496 - initial start point in array/table (default 0), f 52;
#X text 221 512 - initial end point in the array/table (default 511);
#X obj 18 56 cyclone/comment 0 14 DejaVu\ Sans\ Mono empty 0 0 0 0 0 255 255 255 0 0 Transfer function lookup table;
#X obj 17 4 cyclone/comment 0 33 DejaVu\ Sans\ Mono empty 0 0 0 0 0 255 255 255 0 0 lookup~;
#X obj 323 28 cyclone/comment 0 13 DejaVu\ Sans\ Mono empty 0 224 228 220 0 255 255 255 0 0 Objects cloned from Max/MSP;
#X obj 364 4 cyclone/comment 0 24 DejaVu\ Sans\ Mono empty 0 224 228 220 0 255 255 255 0 0 cyclone;
#X obj 122 254 cyclone/lookup~ \$0-violin;
#X obj 122 206 osc~ 0.075;
#X text 204 199 start point, f 6;
#N canvas 788 242 435 447 buffer~ 0;
#X msg 130 132 open;
#X text 28 19 The [lookup~] object works with any kind of array set in Pd \, and not only from the [buffer~] object. In the case of a multi channel [buffer~] object \, [lookup~] can only read its first channel.;
#X obj 117 280 *~;
#X obj 216 284 line~;
#X msg 216 257 \$1 10;
#X obj 216 233 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 219 209 hsl 128 15 0.1 1 0 1 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 250 209 Amplitude, f 10;
#X obj 108 159 cyclone/buffer~ \$0-shape2 @samps 4096;
#X obj 117 320 cyclone/lookup~ \$0-shape2 0 4096;
#X obj 117 244 osc~ 50;
#X obj 117 217 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 108 102 cyclone/loadmess fill sin 4;
#X obj 94 362 output~;
#X connect 0 0 8 0;
#X connect 2 0 9 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 9 0 13 0;
#X connect 9 0 13 1;
#X connect 10 0 2 0;
#X connect 11 0 10 0;
#X connect 12 0 8 0;
#X restore 482 322 pd buffer~;
#X obj 500 69 cyclone/setdsp~;
#X text 72 93 [lookup~] uses arrays as transfer functions for waveshaping distortion \, in which signal input values (from -1 to 1) are mapped to the table's indexes.;
#N canvas 694 90 452 626 waveshaping_1 0;
#X obj 79 414 cnv 15 278 178 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-shape 4099 float 0;
#X coords 0 1 4098 -1 280 180 1;
#X restore 78 413 graph;
#X obj 135 135 *~;
#X obj 214 139 line~;
#X msg 214 112 \$1 10;
#X obj 214 88 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 217 64 hsl 128 15 0.1 1 0 1 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 12700 1;
#N canvas 0 22 382 167 generate_waveform 0;
#X obj 68 52 loadbang;
#X msg 68 76 sinesum 4096 1 0.5 1 0.3 0.2 0.9 \, normalize;
#X obj 68 103 send \$0-shape;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 234 397 pd generate_waveform;
#X obj 201 215 cyclone/scope~ 214 139 2 3 128 -1 1 50 0 0 0 205 229 232 74 79 77 96 98 102 0 empty;
#X text 248 64 Amplitude, f 10;
#X obj 135 89 osc~ 230;
#X obj 135 175 cyclone/lookup~ \$0-shape 1 4096;
#X text 49 373 transfer function:;
#X text 29 17 Here's an example of waveshaping on a sine wave for synthesis.;
#X obj 92 257 output~;
#X connect 2 0 11 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 10 0 2 0;
#X connect 11 0 8 0;
#X connect 11 0 14 0;
#X connect 11 0 14 1;
#X restore 446 278 pd waveshaping_1;
#N canvas 704 213 616 452 waveshaping_2 0;
#X obj 267 121 tgl 20 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 37 26 cnv 15 148 98 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-linear 512 float 1;
#A 0 -1 -0.996086 -0.992172 -0.988258 -0.984344 -0.980431 -0.976517 -0.972603 -0.968689 -0.964775 -0.960861 -0.956947 -0.953033 -0.949119 -0.945205 -0.941292 -0.937378 -0.933464 -0.92955 -0.925636 -0.921722 -0.917808 -0.913894 -0.90998 -0.906067 -0.902153 -0.898239 -0.894325 -0.890411 -0.886497 -0.882583 -0.878669 -0.874755 -0.870842 -0.866928 -0.863014 -0.8591 -0.855186 -0.851272 -0.847358 -0.843444 -0.83953 -0.835616 -0.831703 -0.827789 -0.823875 -0.819961 -0.816047 -0.812133 -0.808219 -0.804305 -0.800391 -0.796477 -0.792564 -0.78865 -0.784736 -0.780822 -0.776908 -0.772994 -0.76908 -0.765166 -0.761252 -0.757339 -0.753425 -0.749511 -0.745597 -0.741683 -0.737769 -0.733855 -0.729941 -0.726027 -0.722113 -0.7182 -0.714286 -0.710372 -0.706458 -0.702544 -0.69863 -0.694716 -0.690802 -0.686888 -0.682975 -0.679061 -0.675147 -0.671233 -0.667319 -0.663405 -0.659491 -0.655577 -0.651663 -0.64775 -0.643836 -0.639922 -0.636008 -0.632094 -0.62818 -0.624266 -0.620352 -0.616438 -0.612524 -0.608611 -0.604697 -0.600783 -0.596869 -0.592955 -0.589041 -0.585127 -0.581213 -0.577299 -0.573385 -0.569472 -0.565558 -0.561644 -0.55773 -0.553816 -0.549902 -0.545988 -0.542074 -0.53816 -0.534247 -0.530333 -0.526419 -0.522505 -0.518591 -0.514677 -0.510763 -0.506849 -0.502935 -0.499022 -0.495108 -0.491194 -0.48728 -0.483366 -0.479452 -0.475538 -0.471624 -0.46771 -0.463796 -0.459883 -0.455969 -0.452055 -0.448141 -0.444227 -0.440313 -0.436399 -0.432485 -0.428571 -0.424658 -0.420744 -0.41683 -0.412916 -0.409002 -0.405088 -0.401174 -0.39726 -0.393346 -0.389432 -0.385519 -0.381605 -0.377691 -0.373777 -0.369863 -0.365949 -0.362035 -0.358121 -0.354207 -0.350294 -0.34638 -0.342466 -0.338552 -0.334638 -0.330724 -0.32681 -0.322896 -0.318982 -0.315068 -0.311155 -0.307241 -0.303327 -0.299413 -0.295499 -0.291585 -0.287671 -0.283757 -0.279843 -0.27593 -0.272016 -0.268102 -0.264188 -0.260274 -0.25636 -0.252446 -0.248532 -0.244618 -0.240704 -0.236791 -0.232877 -0.228963 -0.225049 -0.221135 -0.217221 -0.213307 -0.209393 -0.205479 -0.201566 -0.197652 -0.193738 -0.189824 -0.18591 -0.181996 -0.178082 -0.174168 -0.170254 -0.166341 -0.162427 -0.158513 -0.154599 -0.150685 -0.146771 -0.142857 -0.138943 -0.135029 -0.131115 -0.127202 -0.123288 -0.119374 -0.11546 -0.111546 -0.107632 -0.103718 -0.0998043 -0.0958904 -0.0919765 -0.0880626 -0.0841487 -0.0802348 -0.0763209 -0.0724071 -0.0684931 -0.0645792 -0.0606654 -0.0567515 -0.0528376 -0.0489237 -0.0450098 -0.0410959 -0.037182 -0.0332681 -0.0293542 -0.0254403 -0.0215264 -0.0176125 -0.0136986 -0.00978476 -0.00587082 -0.00195694 0.00195694 0.00587082 0.0097847 0.0136986 0.0176126 0.0215265 0.0254403 0.0293542 0.0332681 0.037182 0.0410959 0.0450097 0.0489237 0.0528376 0.0567515 0.0606654 0.0645792 0.0684931 0.072407 0.0763209 0.0802349 0.0841488 0.0880626 0.0919765 0.0958904 0.0998043 0.103718 0.107632 0.111546 0.11546 0.119374 0.123288 0.127202 0.131115 0.135029 0.138943 0.142857 0.146771 0.150685 0.154599 0.158513 0.162427 0.16634 0.170254 0.174168 0.178082 0.181996 0.18591 0.189824 0.193738 0.197652 0.201566 0.20548 0.209393 0.213307 0.217221 0.221135 0.225049 0.228963 0.232877 0.236791 0.240705 0.244618 0.248532 0.252446 0.25636 0.260274 0.264188 0.268102 0.272016 0.27593 0.279843 0.283757 0.287671 0.291585 0.295499 0.299413 0.303327 0.307241 0.311155 0.315068 0.318982 0.322896 0.32681 0.330724 0.334638 0.338552 0.342466 0.34638 0.350294 0.354207 0.358121 0.362035 0.365949 0.369863 0.373777 0.377691 0.381605 0.385519 0.389432 0.393346 0.39726 0.401174 0.405088 0.409002 0.412916 0.41683 0.420744 0.424658 0.428571 0.432485 0.436399 0.440313 0.444227 0.448141 0.452055 0.455969 0.459883 0.463796 0.46771 0.471624 0.475538 0.479452 0.483366 0.48728 0.491194 0.495108 0.499022 0.502935 0.506849 0.510763 0.514677 0.518591 0.522505 0.526419 0.530333 0.534247 0.53816 0.542074 0.545988 0.549902 0.553816 0.55773 0.561644 0.565558 0.569472 0.573385 0.577299 0.581213 0.585127 0.589041 0.592955 0.596869 0.600783 0.604697 0.608611 0.612525 0.616438 0.620352 0.624266 0.62818 0.632094 0.636008 0.639922 0.643836 0.64775 0.651663 0.655577 0.659491 0.663405 0.667319 0.671233 0.675147 0.679061 0.682975 0.686888 0.690802 0.694716 0.69863 0.702544 0.706458 0.710372 0.714286 0.7182 0.722113 0.726027 0.729941 0.733855 0.737769 0.741683 0.745597 0.749511 0.753425 0.757339 0.761252 0.765166 0.76908 0.772994 0.776908 0.780822 0.784736 0.78865 0.792564 0.796477 0.800391 0.804305 0.808219 0.812133 0.816047 0.819961 0.823875 0.827789 0.831703 0.835616 0.83953 0.843444 0.847358 0.851272 0.855186 0.8591 0.863014 0.866928 0.870842 0.874755 0.878669 0.882583 0.886497 0.890411 0.894325 0.898239 0.902153 0.906067 0.90998 0.913894 0.917808 0.921722 0.925636 0.92955 0.933464 0.937378 0.941292 0.945205 0.949119 0.953033 0.956947 0.960861 0.964775 0.968689 0.972603 0.976517 0.98043 0.984344 0.988258 0.992172 0.996086 1;
#X coords 0 1 511 -1 150 100 1 0 0;
#X restore 36 25 graph;
#X obj 38 165 cnv 15 148 98 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-clipping 512 float 1;
#A 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -0.994129 -0.978474 -0.962818 -0.947162 -0.931507 -0.915851 -0.900196 -0.88454 -0.868885 -0.853229 -0.837573 -0.821918 -0.806262 -0.790607 -0.774951 -0.759295 -0.74364 -0.727984 -0.712329 -0.696673 -0.681018 -0.665362 -0.649706 -0.634051 -0.618395 -0.60274 -0.587084 -0.571429 -0.555773 -0.540118 -0.524462 -0.508806 -0.493151 -0.477495 -0.461839 -0.446184 -0.430528 -0.414873 -0.399217 -0.383562 -0.367906 -0.352251 -0.336595 -0.320939 -0.305284 -0.289628 -0.273973 -0.258317 -0.242661 -0.227006 -0.21135 -0.195695 -0.180039 -0.164384 -0.148728 -0.133072 -0.117417 -0.101761 -0.0861056 -0.0704501 -0.0547945 -0.039139 -0.0234833 -0.00782776 0.00782776 0.0234833 0.0391388 0.0547943 0.0704503 0.0861058 0.101761 0.117417 0.133072 0.148728 0.164383 0.180039 0.195695 0.21135 0.227006 0.242661 0.258317 0.273973 0.289628 0.305284 0.32094 0.336595 0.352251 0.367906 0.383562 0.399217 0.414873 0.430528 0.446184 0.46184 0.477495 0.493151 0.508806 0.524462 0.540117 0.555773 0.571429 0.587084 0.60274 0.618395 0.634051 0.649706 0.665362 0.681017 0.696673 0.712329 0.727984 0.74364 0.759295 0.774951 0.790606 0.806262 0.821918 0.837574 0.853229 0.868885 0.88454 0.900196 0.915851 0.931507 0.947163 0.962818 0.978474 0.994129 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
#X coords 0 1 511 -1 150 100 1 0 0;
#X restore 37 164 graph;
#X obj 41 308 cnv 15 148 98 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-s 512 float 1;
#A 0 -1 -0.999347 -0.998604 -0.997937 -0.997178 -0.99641 -0.99572 -0.994936 -0.994142 -0.993429 -0.992618 -0.991889 -0.99106 -0.990222 -0.989468 -0.988611 -0.987744 -0.986966 -0.98608 -0.985284 -0.984378 -0.983463 -0.98264 -0.981704 -0.980757 -0.979906 -0.978939 -0.97796 -0.977081 -0.976081 -0.975182 -0.97416 -0.973126 -0.972197 -0.97114 -0.970071 -0.96911 -0.968018 -0.967036 -0.96592 -0.964791 -0.963776 -0.962622 -0.961455 -0.960406 -0.959213 -0.95814 -0.956921 -0.955688 -0.95458 -0.953319 -0.952044 -0.950898 -0.949595 -0.948277 -0.947093 -0.945746 -0.944535 -0.943159 -0.941766 -0.940515 -0.939092 -0.937652 -0.936359 -0.934888 -0.933565 -0.932062 -0.930541 -0.929174 -0.92762 -0.926048 -0.924635 -0.923028 -0.921403 -0.919942 -0.918281 -0.916789 -0.915091 -0.913374 -0.911831 -0.910076 -0.908301 -0.906706 -0.904892 -0.903261 -0.901407 -0.899532 -0.897847 -0.89593 -0.893991 -0.892249 -0.890268 -0.888487 -0.886462 -0.884414 -0.882574 -0.88048 -0.878363 -0.87646 -0.874296 -0.872107 -0.87014 -0.867903 -0.865893 -0.863607 -0.861294 -0.859216 -0.856852 -0.854461 -0.852313 -0.84987 -0.847674 -0.845177 -0.842652 -0.840382 -0.837801 -0.83519 -0.832843 -0.830175 -0.827777 -0.82505 -0.822291 -0.819812 -0.816993 -0.814141 -0.811579 -0.808664 -0.805716 -0.803067 -0.800054 -0.797347 -0.794268 -0.791153 -0.788354 -0.785171 -0.781951 -0.779058 -0.775768 -0.772811 -0.769448 -0.766046 -0.762989 -0.759513 -0.755996 -0.752836 -0.749243 -0.745607 -0.74234 -0.738625 -0.735287 -0.73149 -0.727649 -0.724198 -0.720273 -0.716302 -0.712734 -0.708677 -0.70503 -0.700884 -0.696689 -0.69292 -0.688633 -0.684296 -0.6804 -0.675968 -0.671986 -0.667457 -0.662875 -0.658758 -0.654077 -0.64934 -0.645085 -0.640244 -0.635348 -0.630949 -0.625945 -0.621449 -0.616335 -0.611163 -0.606515 -0.601228 -0.595881 -0.591076 -0.585611 -0.5807 -0.575116 -0.569466 -0.56439 -0.558616 -0.552776 -0.547528 -0.541559 -0.536196 -0.530097 -0.523926 -0.518382 -0.512076 -0.505698 -0.499966 -0.493448 -0.486854 -0.480928 -0.47419 -0.468134 -0.461247 -0.454281 -0.448021 -0.440901 -0.4337 -0.427228 -0.419868 -0.413255 -0.405733 -0.398125 -0.391288 -0.383512 -0.375647 -0.368579 -0.36054 -0.352409 -0.345103 -0.336793 -0.329326 -0.320833 -0.312243 -0.304523 -0.295744 -0.286864 -0.278884 -0.269808 -0.261652 -0.252378 -0.242995 -0.234564 -0.224976 -0.215277 -0.206561 -0.196649 -0.187742 -0.177612 -0.167365 -0.158157 -0.147685 -0.137092 -0.127573 -0.116747 -0.105796 -0.0959557 -0.0847643 -0.0747077 -0.0632704 -0.0517009 -0.0413046 -0.029481 -0.0175207 -0.00677317 0.005422 0.0161833 0.0281589 0.0399976 0.0504072 0.0619915 0.0734434 0.0835128 0.0947186 0.104572 0.115537 0.126376 0.135907 0.146514 0.157 0.166219 0.176479 0.186622 0.195541 0.205465 0.214192 0.223904 0.233504 0.241946 0.25134 0.260627 0.268793 0.27788 0.285871 0.294763 0.303553 0.311282 0.319884 0.328387 0.335863 0.344184 0.352409 0.359642 0.36769 0.374767 0.382643 0.390428 0.397274 0.404892 0.412423 0.419045 0.426415 0.432894 0.440105 0.447234 0.453502 0.460477 0.467373 0.473436 0.480183 0.486116 0.492719 0.499246 0.504985 0.511371 0.517685 0.523237 0.529415 0.535522 0.540892 0.546868 0.552123 0.557971 0.563751 0.568834 0.574491 0.580083 0.585 0.590472 0.595283 0.600637 0.60593 0.610584 0.615764 0.620884 0.625386 0.630396 0.634801 0.639703 0.644549 0.648811 0.653553 0.658241 0.662363 0.66695 0.671485 0.675472 0.67991 0.683811 0.688153 0.692446 0.69622 0.70042 0.704572 0.708223 0.712286 0.715858 0.719834 0.723764 0.72722 0.731065 0.734867 0.73821 0.74193 0.745607 0.748841 0.752439 0.755603 0.759124 0.762605 0.765666 0.769072 0.772439 0.7754 0.778694 0.781591 0.784815 0.788002 0.790805 0.793923 0.797006 0.799717 0.802734 0.805387 0.808338 0.811257 0.813823 0.816678 0.819501 0.821983 0.824745 0.827475 0.829876 0.832548 0.834898 0.837512 0.840097 0.842369 0.844898 0.847398 0.849597 0.852043 0.854194 0.856588 0.858954 0.861035 0.863351 0.86564 0.867653 0.869893 0.871862 0.874054 0.876221 0.878126 0.880246 0.882342 0.884185 0.886236 0.888263 0.890046 0.89203 0.893775 0.895716 0.897635 0.899322 0.9012 0.903057 0.904689 0.906505 0.908102 0.90988 0.911637 0.913182 0.914901 0.916601 0.918096 0.919759 0.921403 0.922849 0.924458 0.925872 0.927446 0.929003 0.930371 0.931894 0.933399 0.934723 0.936196 0.937491 0.938933 0.940358 0.941611 0.943005 0.944383 0.945595 0.946944 0.94813 0.94945 0.950754 0.951902 0.953178 0.95444 0.95555 0.956785 0.958006 0.959079 0.960274 0.961324 0.962493 0.963649 0.964665 0.965795 0.966913 0.967896 0.96899 0.969951 0.971022 0.97208 0.97301 0.974045 0.975069 0.975969 0.97697 0.977851 0.978831 0.979799 0.980651 0.981599 0.982536 0.98336 0.984277 0.985184 0.985981 0.986868 0.987648 0.988515 0.989373 0.990128 0.990968 0.991797 0.992527 0.993339 0.994053 0.994848 0.995634 0.996324 0.997093 0.997853 0.998521 0.999265 0.999919;
#X coords 0 1 511 -1 150 100 1 0 0;
#X restore 40 307 graph;
#X obj 267 278 cyclone/lookup~ \$0-linear;
#X obj 329 223 pack s \$0;
#X msg 282 187 linear;
#X msg 329 242 set \$2-\$1;
#X text 419 187 <= set transfer function;
#X msg 329 187 clipping;
#X text 16 115 -1;
#X text 21 19 1;
#X text 32 128 0;
#X text 175 127 511;
#X text 32 268 0;
#X text 175 267 511;
#X text 17 255 -1;
#X text 22 159 1;
#X text 21 397 -1;
#X text 26 301 1;
#X text 32 413 0;
#X text 175 412 511;
#X obj 247 388 cyclone/buffer~ buff_\$0 violin.wav;
#X obj 267 151 cyclone/play~ buff_\$0 @loop 1;
#X msg 388 187 s;
#X text 218 31 Here we have a sound file going through a couple of transfer functions for waveshaping distortion. The "linear" function doesn't do anything to the audio input. The "clipping" function is a hard limiter and also adjusts the gain four times as much. For last \, we have an exponential "s"-curve like transfer function.;
#X obj 267 316 output~;
#X connect 0 0 26 0;
#X connect 7 0 29 0;
#X connect 7 0 29 1;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 12 0 8 0;
#X connect 26 0 7 0;
#X connect 27 0 8 0;
#X restore 446 301 pd waveshaping_2;
#X obj 122 289 output~;
#X connect 16 0 27 0;
#X connect 26 0 38 1;
#X connect 27 0 38 2;
#X connect 38 0 46 0;
#X connect 38 0 46 1;
#X connect 39 0 38 0;
